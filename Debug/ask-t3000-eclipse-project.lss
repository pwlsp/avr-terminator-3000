
ask-t3000-eclipse-project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000011ee  00001282  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  00001282  2**0
                  ALLOC
  3 .comment      00000012  00000000  00000000  00001282  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001294  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 000000a0  00000000  00000000  000012d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   00000c94  00000000  00000000  00001374  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 000006ec  00000000  00000000  00002008  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00000c2f  00000000  00000000  000026f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  00000234  00000000  00000000  00003324  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    0000042b  00000000  00000000  00003558  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line_str 00000091  00000000  00000000  00003983  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 00000078  00000000  00000000  00003a14  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
       8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
       c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	21 e0       	ldi	r18, 0x01	; 1

00000076 <.Loc.1>:
      76:	a0 e0       	ldi	r26, 0x00	; 0

00000078 <.Loc.2>:
      78:	b1 e0       	ldi	r27, 0x01	; 1

0000007a <.Loc.3>:
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.Loc.5>

0000007c <.Loc.4>:
      7c:	1d 92       	st	X+, r1

0000007e <.Loc.5>:
      7e:	a1 30       	cpi	r26, 0x01	; 1

00000080 <.Loc.6>:
      80:	b2 07       	cpc	r27, r18

00000082 <.Loc.7>:
      82:	e1 f7       	brne	.-8      	; 0x7c <.Loc.4>

00000084 <L0^A>:
      84:	0e 94 cd 07 	call	0xf9a	; 0xf9a <main>
      88:	0c 94 f5 08 	jmp	0x11ea	; 0x11ea <_exit>

0000008c <__bad_interrupt>:
      8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <sprawdzaj_diody>:
#include <util/delay.h>
#include <stdbool.h>

bool mode = 0; // 0 - manual  |  1 - auto

void sprawdzaj_diody() {
      90:	cf 93       	push	r28
      92:	df 93       	push	r29
      94:	cd b7       	in	r28, 0x3d	; 61
      96:	de b7       	in	r29, 0x3e	; 62
      98:	6c 97       	sbiw	r28, 0x1c	; 28
      9a:	0f b6       	in	r0, 0x3f	; 63
      9c:	f8 94       	cli
      9e:	de bf       	out	0x3e, r29	; 62
      a0:	0f be       	out	0x3f, r0	; 63
      a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <.L18>:
    while(1) {
        PORTB |= 0b00000001;
      a4:	85 e2       	ldi	r24, 0x25	; 37
      a6:	90 e0       	ldi	r25, 0x00	; 0
      a8:	fc 01       	movw	r30, r24
      aa:	20 81       	ld	r18, Z
      ac:	85 e2       	ldi	r24, 0x25	; 37
      ae:	90 e0       	ldi	r25, 0x00	; 0

000000b0 <.Loc.2>:
      b0:	21 60       	ori	r18, 0x01	; 1
      b2:	fc 01       	movw	r30, r24
      b4:	20 83       	st	Z, r18
      b6:	80 e0       	ldi	r24, 0x00	; 0
      b8:	90 e0       	ldi	r25, 0x00	; 0
      ba:	aa e7       	ldi	r26, 0x7A	; 122
      bc:	b4 e4       	ldi	r27, 0x44	; 68
      be:	8f 87       	std	Y+15, r24	; 0x0f
      c0:	98 8b       	std	Y+16, r25	; 0x10
      c2:	a9 8b       	std	Y+17, r26	; 0x11
      c4:	ba 8b       	std	Y+18, r27	; 0x12

000000c6 <.LBB78>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
      c6:	20 e0       	ldi	r18, 0x00	; 0
      c8:	30 e0       	ldi	r19, 0x00	; 0
      ca:	4a ef       	ldi	r20, 0xFA	; 250
      cc:	54 e4       	ldi	r21, 0x44	; 68
      ce:	6f 85       	ldd	r22, Y+15	; 0x0f
      d0:	78 89       	ldd	r23, Y+16	; 0x10
      d2:	89 89       	ldd	r24, Y+17	; 0x11
      d4:	9a 89       	ldd	r25, Y+18	; 0x12
      d6:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
      da:	dc 01       	movw	r26, r24
      dc:	cb 01       	movw	r24, r22
      de:	8b 8b       	std	Y+19, r24	; 0x13
      e0:	9c 8b       	std	Y+20, r25	; 0x14
      e2:	ad 8b       	std	Y+21, r26	; 0x15
      e4:	be 8b       	std	Y+22, r27	; 0x16

000000e6 <.Loc.4>:
	if (__tmp < 1.0)
      e6:	20 e0       	ldi	r18, 0x00	; 0
      e8:	30 e0       	ldi	r19, 0x00	; 0
      ea:	40 e8       	ldi	r20, 0x80	; 128
      ec:	5f e3       	ldi	r21, 0x3F	; 63
      ee:	6b 89       	ldd	r22, Y+19	; 0x13
      f0:	7c 89       	ldd	r23, Y+20	; 0x14
      f2:	8d 89       	ldd	r24, Y+21	; 0x15
      f4:	9e 89       	ldd	r25, Y+22	; 0x16
      f6:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__cmpsf2>
      fa:	81 15       	cp	r24, r1
      fc:	2c f4       	brge	.+10     	; 0x108 <.L23>

000000fe <.Loc.5>:
		__ticks = 1;
      fe:	81 e0       	ldi	r24, 0x01	; 1
     100:	90 e0       	ldi	r25, 0x00	; 0
     102:	98 8f       	std	Y+24, r25	; 0x18
     104:	8f 8b       	std	Y+23, r24	; 0x17
     106:	40 c0       	rjmp	.+128    	; 0x188 <.L4>

00000108 <.L23>:
	else if (__tmp > 65535)
     108:	20 e0       	ldi	r18, 0x00	; 0
     10a:	3f ef       	ldi	r19, 0xFF	; 255
     10c:	4f e7       	ldi	r20, 0x7F	; 127
     10e:	57 e4       	ldi	r21, 0x47	; 71
     110:	6b 89       	ldd	r22, Y+19	; 0x13
     112:	7c 89       	ldd	r23, Y+20	; 0x14
     114:	8d 89       	ldd	r24, Y+21	; 0x15
     116:	9e 89       	ldd	r25, Y+22	; 0x16
     118:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <__gesf2>
     11c:	81 30       	cpi	r24, 0x01	; 1
     11e:	54 f1       	brlt	.+84     	; 0x174 <.L24>

00000120 <.Loc.7>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     120:	20 e0       	ldi	r18, 0x00	; 0
     122:	30 e0       	ldi	r19, 0x00	; 0
     124:	40 e2       	ldi	r20, 0x20	; 32
     126:	51 e4       	ldi	r21, 0x41	; 65
     128:	6f 85       	ldd	r22, Y+15	; 0x0f
     12a:	78 89       	ldd	r23, Y+16	; 0x10
     12c:	89 89       	ldd	r24, Y+17	; 0x11
     12e:	9a 89       	ldd	r25, Y+18	; 0x12
     130:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     134:	dc 01       	movw	r26, r24
     136:	cb 01       	movw	r24, r22

00000138 <.Loc.8>:
     138:	bc 01       	movw	r22, r24
     13a:	cd 01       	movw	r24, r26
     13c:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     140:	dc 01       	movw	r26, r24
     142:	cb 01       	movw	r24, r22
     144:	98 8f       	std	Y+24, r25	; 0x18
     146:	8f 8b       	std	Y+23, r24	; 0x17

00000148 <.Loc.9>:
		while(__ticks)
     148:	10 c0       	rjmp	.+32     	; 0x16a <.L7>

0000014a <.L8>:
     14a:	88 ec       	ldi	r24, 0xC8	; 200
     14c:	90 e0       	ldi	r25, 0x00	; 0
     14e:	9a 8f       	std	Y+26, r25	; 0x1a
     150:	89 8f       	std	Y+25, r24	; 0x19

00000152 <.LBB80>:
		"   sbci %B0,0" "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     152:	89 8d       	ldd	r24, Y+25	; 0x19
     154:	9a 8d       	ldd	r25, Y+26	; 0x1a

00000156 <.L1^B1>:
     156:	01 97       	sbiw	r24, 0x01	; 1
     158:	f1 f7       	brne	.-4      	; 0x156 <.L1^B1>
     15a:	9a 8f       	std	Y+26, r25	; 0x1a
     15c:	89 8f       	std	Y+25, r24	; 0x19

0000015e <.Loc.11>:
	...

00000160 <.LBE80>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     160:	8f 89       	ldd	r24, Y+23	; 0x17
     162:	98 8d       	ldd	r25, Y+24	; 0x18
     164:	01 97       	sbiw	r24, 0x01	; 1
     166:	98 8f       	std	Y+24, r25	; 0x18
     168:	8f 8b       	std	Y+23, r24	; 0x17

0000016a <.L7>:
		while(__ticks)
     16a:	8f 89       	ldd	r24, Y+23	; 0x17
     16c:	98 8d       	ldd	r25, Y+24	; 0x18
     16e:	00 97       	sbiw	r24, 0x00	; 0
     170:	61 f7       	brne	.-40     	; 0x14a <.L8>

00000172 <.Loc.14>:
		}
		return;
     172:	15 c0       	rjmp	.+42     	; 0x19e <.L9>

00000174 <.L24>:
	}
	else
		__ticks = (uint16_t)__tmp;
     174:	6b 89       	ldd	r22, Y+19	; 0x13
     176:	7c 89       	ldd	r23, Y+20	; 0x14
     178:	8d 89       	ldd	r24, Y+21	; 0x15
     17a:	9e 89       	ldd	r25, Y+22	; 0x16
     17c:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     180:	dc 01       	movw	r26, r24
     182:	cb 01       	movw	r24, r22
     184:	98 8f       	std	Y+24, r25	; 0x18
     186:	8f 8b       	std	Y+23, r24	; 0x17

00000188 <.L4>:
     188:	8f 89       	ldd	r24, Y+23	; 0x17
     18a:	98 8d       	ldd	r25, Y+24	; 0x18
     18c:	9c 8f       	std	Y+28, r25	; 0x1c
     18e:	8b 8f       	std	Y+27, r24	; 0x1b

00000190 <.LBB82>:
     190:	8b 8d       	ldd	r24, Y+27	; 0x1b
     192:	9c 8d       	ldd	r25, Y+28	; 0x1c

00000194 <.L1^B2>:
     194:	01 97       	sbiw	r24, 0x01	; 1
     196:	f1 f7       	brne	.-4      	; 0x194 <.L1^B2>
     198:	9c 8f       	std	Y+28, r25	; 0x1c
     19a:	8b 8f       	std	Y+27, r24	; 0x1b

0000019c <.Loc.17>:
	...

0000019e <.L9>:
        _delay_ms(1000);

        PORTB &= 0b11111110;
     19e:	85 e2       	ldi	r24, 0x25	; 37
     1a0:	90 e0       	ldi	r25, 0x00	; 0
     1a2:	fc 01       	movw	r30, r24
     1a4:	20 81       	ld	r18, Z

000001a6 <.Loc.19>:
     1a6:	85 e2       	ldi	r24, 0x25	; 37
     1a8:	90 e0       	ldi	r25, 0x00	; 0

000001aa <.Loc.20>:
     1aa:	2e 7f       	andi	r18, 0xFE	; 254
     1ac:	fc 01       	movw	r30, r24
     1ae:	20 83       	st	Z, r18
     1b0:	80 e0       	ldi	r24, 0x00	; 0
     1b2:	90 e0       	ldi	r25, 0x00	; 0
     1b4:	aa e7       	ldi	r26, 0x7A	; 122
     1b6:	b4 e4       	ldi	r27, 0x44	; 68
     1b8:	89 83       	std	Y+1, r24	; 0x01
     1ba:	9a 83       	std	Y+2, r25	; 0x02
     1bc:	ab 83       	std	Y+3, r26	; 0x03
     1be:	bc 83       	std	Y+4, r27	; 0x04

000001c0 <.LBB84>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     1c0:	20 e0       	ldi	r18, 0x00	; 0
     1c2:	30 e0       	ldi	r19, 0x00	; 0
     1c4:	4a ef       	ldi	r20, 0xFA	; 250
     1c6:	54 e4       	ldi	r21, 0x44	; 68
     1c8:	69 81       	ldd	r22, Y+1	; 0x01
     1ca:	7a 81       	ldd	r23, Y+2	; 0x02
     1cc:	8b 81       	ldd	r24, Y+3	; 0x03
     1ce:	9c 81       	ldd	r25, Y+4	; 0x04
     1d0:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     1d4:	dc 01       	movw	r26, r24
     1d6:	cb 01       	movw	r24, r22
     1d8:	8d 83       	std	Y+5, r24	; 0x05
     1da:	9e 83       	std	Y+6, r25	; 0x06
     1dc:	af 83       	std	Y+7, r26	; 0x07
     1de:	b8 87       	std	Y+8, r27	; 0x08

000001e0 <.Loc.22>:
	if (__tmp < 1.0)
     1e0:	20 e0       	ldi	r18, 0x00	; 0
     1e2:	30 e0       	ldi	r19, 0x00	; 0
     1e4:	40 e8       	ldi	r20, 0x80	; 128
     1e6:	5f e3       	ldi	r21, 0x3F	; 63
     1e8:	6d 81       	ldd	r22, Y+5	; 0x05
     1ea:	7e 81       	ldd	r23, Y+6	; 0x06
     1ec:	8f 81       	ldd	r24, Y+7	; 0x07
     1ee:	98 85       	ldd	r25, Y+8	; 0x08
     1f0:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__cmpsf2>
     1f4:	81 15       	cp	r24, r1
     1f6:	2c f4       	brge	.+10     	; 0x202 <.L25>

000001f8 <.Loc.23>:
		__ticks = 1;
     1f8:	81 e0       	ldi	r24, 0x01	; 1
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	9a 87       	std	Y+10, r25	; 0x0a
     1fe:	89 87       	std	Y+9, r24	; 0x09
     200:	40 c0       	rjmp	.+128    	; 0x282 <.L12>

00000202 <.L25>:
	else if (__tmp > 65535)
     202:	20 e0       	ldi	r18, 0x00	; 0
     204:	3f ef       	ldi	r19, 0xFF	; 255
     206:	4f e7       	ldi	r20, 0x7F	; 127
     208:	57 e4       	ldi	r21, 0x47	; 71
     20a:	6d 81       	ldd	r22, Y+5	; 0x05
     20c:	7e 81       	ldd	r23, Y+6	; 0x06
     20e:	8f 81       	ldd	r24, Y+7	; 0x07
     210:	98 85       	ldd	r25, Y+8	; 0x08
     212:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <__gesf2>
     216:	81 30       	cpi	r24, 0x01	; 1
     218:	54 f1       	brlt	.+84     	; 0x26e <.L26>

0000021a <.Loc.25>:
		__ticks = (uint16_t) (__ms * 10.0);
     21a:	20 e0       	ldi	r18, 0x00	; 0
     21c:	30 e0       	ldi	r19, 0x00	; 0
     21e:	40 e2       	ldi	r20, 0x20	; 32
     220:	51 e4       	ldi	r21, 0x41	; 65
     222:	69 81       	ldd	r22, Y+1	; 0x01
     224:	7a 81       	ldd	r23, Y+2	; 0x02
     226:	8b 81       	ldd	r24, Y+3	; 0x03
     228:	9c 81       	ldd	r25, Y+4	; 0x04
     22a:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     22e:	dc 01       	movw	r26, r24
     230:	cb 01       	movw	r24, r22

00000232 <.Loc.26>:
     232:	bc 01       	movw	r22, r24
     234:	cd 01       	movw	r24, r26
     236:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     23a:	dc 01       	movw	r26, r24
     23c:	cb 01       	movw	r24, r22
     23e:	9a 87       	std	Y+10, r25	; 0x0a
     240:	89 87       	std	Y+9, r24	; 0x09

00000242 <.Loc.27>:
		while(__ticks)
     242:	10 c0       	rjmp	.+32     	; 0x264 <.L15>

00000244 <.L16>:
     244:	88 ec       	ldi	r24, 0xC8	; 200
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	9c 87       	std	Y+12, r25	; 0x0c
     24a:	8b 87       	std	Y+11, r24	; 0x0b

0000024c <.LBB86>:
     24c:	8b 85       	ldd	r24, Y+11	; 0x0b
     24e:	9c 85       	ldd	r25, Y+12	; 0x0c

00000250 <.L1^B3>:
     250:	01 97       	sbiw	r24, 0x01	; 1
     252:	f1 f7       	brne	.-4      	; 0x250 <.L1^B3>
     254:	9c 87       	std	Y+12, r25	; 0x0c
     256:	8b 87       	std	Y+11, r24	; 0x0b

00000258 <.Loc.29>:
	...

0000025a <.LBE86>:
			__ticks --;
     25a:	89 85       	ldd	r24, Y+9	; 0x09
     25c:	9a 85       	ldd	r25, Y+10	; 0x0a
     25e:	01 97       	sbiw	r24, 0x01	; 1
     260:	9a 87       	std	Y+10, r25	; 0x0a
     262:	89 87       	std	Y+9, r24	; 0x09

00000264 <.L15>:
		while(__ticks)
     264:	89 85       	ldd	r24, Y+9	; 0x09
     266:	9a 85       	ldd	r25, Y+10	; 0x0a
     268:	00 97       	sbiw	r24, 0x00	; 0
     26a:	61 f7       	brne	.-40     	; 0x244 <.L16>

0000026c <.Loc.32>:
		return;
     26c:	15 c0       	rjmp	.+42     	; 0x298 <.L17>

0000026e <.L26>:
		__ticks = (uint16_t)__tmp;
     26e:	6d 81       	ldd	r22, Y+5	; 0x05
     270:	7e 81       	ldd	r23, Y+6	; 0x06
     272:	8f 81       	ldd	r24, Y+7	; 0x07
     274:	98 85       	ldd	r25, Y+8	; 0x08
     276:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     27a:	dc 01       	movw	r26, r24
     27c:	cb 01       	movw	r24, r22
     27e:	9a 87       	std	Y+10, r25	; 0x0a
     280:	89 87       	std	Y+9, r24	; 0x09

00000282 <.L12>:
     282:	89 85       	ldd	r24, Y+9	; 0x09
     284:	9a 85       	ldd	r25, Y+10	; 0x0a
     286:	9e 87       	std	Y+14, r25	; 0x0e
     288:	8d 87       	std	Y+13, r24	; 0x0d

0000028a <.LBB88>:
     28a:	8d 85       	ldd	r24, Y+13	; 0x0d
     28c:	9e 85       	ldd	r25, Y+14	; 0x0e

0000028e <.L1^B4>:
     28e:	01 97       	sbiw	r24, 0x01	; 1
     290:	f1 f7       	brne	.-4      	; 0x28e <.L1^B4>
     292:	9e 87       	std	Y+14, r25	; 0x0e
     294:	8d 87       	std	Y+13, r24	; 0x0d

00000296 <.Loc.35>:
	...

00000298 <.L17>:
        PORTB |= 0b00000001;
     298:	00 00       	nop
     29a:	04 cf       	rjmp	.-504    	; 0xa4 <.L18>

0000029c <sprawdzaj_przyciski>:
        _delay_ms(1000);
    }
}

void sprawdzaj_przyciski() {
     29c:	cf 93       	push	r28
     29e:	df 93       	push	r29
     2a0:	cd b7       	in	r28, 0x3d	; 61
     2a2:	de b7       	in	r29, 0x3e	; 62

000002a4 <.L31>:
    while (1) {
        if (PIND & 0b10000000 || PIND & 0b00100000) { // D7 lub D5
     2a4:	89 e2       	ldi	r24, 0x29	; 41
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	fc 01       	movw	r30, r24
     2aa:	80 81       	ld	r24, Z

000002ac <.Loc.39>:
     2ac:	81 15       	cp	r24, r1
     2ae:	54 f0       	brlt	.+20     	; 0x2c4 <.L28>

000002b0 <.Loc.40>:
     2b0:	89 e2       	ldi	r24, 0x29	; 41
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	fc 01       	movw	r30, r24
     2b6:	80 81       	ld	r24, Z

000002b8 <.Loc.41>:
     2b8:	88 2f       	mov	r24, r24
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	80 72       	andi	r24, 0x20	; 32
     2be:	99 27       	eor	r25, r25

000002c0 <.Loc.42>:
     2c0:	00 97       	sbiw	r24, 0x00	; 0
     2c2:	51 f0       	breq	.+20     	; 0x2d8 <.L29>

000002c4 <.L28>:
            PORTB |= 0b00000001;
     2c4:	85 e2       	ldi	r24, 0x25	; 37
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	fc 01       	movw	r30, r24
     2ca:	20 81       	ld	r18, Z
     2cc:	85 e2       	ldi	r24, 0x25	; 37
     2ce:	90 e0       	ldi	r25, 0x00	; 0

000002d0 <.Loc.44>:
     2d0:	21 60       	ori	r18, 0x01	; 1
     2d2:	fc 01       	movw	r30, r24
     2d4:	20 83       	st	Z, r18
     2d6:	09 c0       	rjmp	.+18     	; 0x2ea <.L30>

000002d8 <.L29>:
        }
        else {
            PORTB &= 0b11111110;
     2d8:	85 e2       	ldi	r24, 0x25	; 37
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	fc 01       	movw	r30, r24
     2de:	20 81       	ld	r18, Z

000002e0 <.Loc.46>:
     2e0:	85 e2       	ldi	r24, 0x25	; 37
     2e2:	90 e0       	ldi	r25, 0x00	; 0

000002e4 <.Loc.47>:
     2e4:	2e 7f       	andi	r18, 0xFE	; 254
     2e6:	fc 01       	movw	r30, r24
     2e8:	20 83       	st	Z, r18

000002ea <.L30>:
        if (PIND & 0b10000000 || PIND & 0b00100000) { // D7 lub D5
     2ea:	dc cf       	rjmp	.-72     	; 0x2a4 <.L31>

000002ec <wlacz_silniki_na_chwile>:
        }
    }
}

void wlacz_silniki_na_chwile() {
     2ec:	cf 93       	push	r28
     2ee:	df 93       	push	r29
     2f0:	cd b7       	in	r28, 0x3d	; 61
     2f2:	de b7       	in	r29, 0x3e	; 62
     2f4:	6c 97       	sbiw	r28, 0x1c	; 28
     2f6:	0f b6       	in	r0, 0x3f	; 63
     2f8:	f8 94       	cli
     2fa:	de bf       	out	0x3e, r29	; 62
     2fc:	0f be       	out	0x3f, r0	; 63
     2fe:	cd bf       	out	0x3d, r28	; 61
     300:	80 e0       	ldi	r24, 0x00	; 0
     302:	90 e0       	ldi	r25, 0x00	; 0
     304:	aa ef       	ldi	r26, 0xFA	; 250
     306:	b4 e4       	ldi	r27, 0x44	; 68
     308:	8f 87       	std	Y+15, r24	; 0x0f
     30a:	98 8b       	std	Y+16, r25	; 0x10
     30c:	a9 8b       	std	Y+17, r26	; 0x11
     30e:	ba 8b       	std	Y+18, r27	; 0x12

00000310 <.LBB90>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     310:	20 e0       	ldi	r18, 0x00	; 0
     312:	30 e0       	ldi	r19, 0x00	; 0
     314:	4a ef       	ldi	r20, 0xFA	; 250
     316:	54 e4       	ldi	r21, 0x44	; 68
     318:	6f 85       	ldd	r22, Y+15	; 0x0f
     31a:	78 89       	ldd	r23, Y+16	; 0x10
     31c:	89 89       	ldd	r24, Y+17	; 0x11
     31e:	9a 89       	ldd	r25, Y+18	; 0x12
     320:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     324:	dc 01       	movw	r26, r24
     326:	cb 01       	movw	r24, r22
     328:	8b 8b       	std	Y+19, r24	; 0x13
     32a:	9c 8b       	std	Y+20, r25	; 0x14
     32c:	ad 8b       	std	Y+21, r26	; 0x15
     32e:	be 8b       	std	Y+22, r27	; 0x16

00000330 <.Loc.51>:
	if (__tmp < 1.0)
     330:	20 e0       	ldi	r18, 0x00	; 0
     332:	30 e0       	ldi	r19, 0x00	; 0
     334:	40 e8       	ldi	r20, 0x80	; 128
     336:	5f e3       	ldi	r21, 0x3F	; 63
     338:	6b 89       	ldd	r22, Y+19	; 0x13
     33a:	7c 89       	ldd	r23, Y+20	; 0x14
     33c:	8d 89       	ldd	r24, Y+21	; 0x15
     33e:	9e 89       	ldd	r25, Y+22	; 0x16
     340:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__cmpsf2>
     344:	81 15       	cp	r24, r1
     346:	2c f4       	brge	.+10     	; 0x352 <.L53>

00000348 <.Loc.52>:
		__ticks = 1;
     348:	81 e0       	ldi	r24, 0x01	; 1
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	98 8f       	std	Y+24, r25	; 0x18
     34e:	8f 8b       	std	Y+23, r24	; 0x17
     350:	40 c0       	rjmp	.+128    	; 0x3d2 <.L35>

00000352 <.L53>:
	else if (__tmp > 65535)
     352:	20 e0       	ldi	r18, 0x00	; 0
     354:	3f ef       	ldi	r19, 0xFF	; 255
     356:	4f e7       	ldi	r20, 0x7F	; 127
     358:	57 e4       	ldi	r21, 0x47	; 71
     35a:	6b 89       	ldd	r22, Y+19	; 0x13
     35c:	7c 89       	ldd	r23, Y+20	; 0x14
     35e:	8d 89       	ldd	r24, Y+21	; 0x15
     360:	9e 89       	ldd	r25, Y+22	; 0x16
     362:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <__gesf2>
     366:	81 30       	cpi	r24, 0x01	; 1
     368:	54 f1       	brlt	.+84     	; 0x3be <.L54>

0000036a <.Loc.54>:
		__ticks = (uint16_t) (__ms * 10.0);
     36a:	20 e0       	ldi	r18, 0x00	; 0
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	40 e2       	ldi	r20, 0x20	; 32
     370:	51 e4       	ldi	r21, 0x41	; 65
     372:	6f 85       	ldd	r22, Y+15	; 0x0f
     374:	78 89       	ldd	r23, Y+16	; 0x10
     376:	89 89       	ldd	r24, Y+17	; 0x11
     378:	9a 89       	ldd	r25, Y+18	; 0x12
     37a:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     37e:	dc 01       	movw	r26, r24
     380:	cb 01       	movw	r24, r22

00000382 <.Loc.55>:
     382:	bc 01       	movw	r22, r24
     384:	cd 01       	movw	r24, r26
     386:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     38a:	dc 01       	movw	r26, r24
     38c:	cb 01       	movw	r24, r22
     38e:	98 8f       	std	Y+24, r25	; 0x18
     390:	8f 8b       	std	Y+23, r24	; 0x17

00000392 <.Loc.56>:
		while(__ticks)
     392:	10 c0       	rjmp	.+32     	; 0x3b4 <.L38>

00000394 <.L39>:
     394:	88 ec       	ldi	r24, 0xC8	; 200
     396:	90 e0       	ldi	r25, 0x00	; 0
     398:	9a 8f       	std	Y+26, r25	; 0x1a
     39a:	89 8f       	std	Y+25, r24	; 0x19

0000039c <.LBB92>:
     39c:	89 8d       	ldd	r24, Y+25	; 0x19
     39e:	9a 8d       	ldd	r25, Y+26	; 0x1a

000003a0 <.L1^B5>:
     3a0:	01 97       	sbiw	r24, 0x01	; 1
     3a2:	f1 f7       	brne	.-4      	; 0x3a0 <.L1^B5>
     3a4:	9a 8f       	std	Y+26, r25	; 0x1a
     3a6:	89 8f       	std	Y+25, r24	; 0x19

000003a8 <.Loc.58>:
	...

000003aa <.LBE92>:
			__ticks --;
     3aa:	8f 89       	ldd	r24, Y+23	; 0x17
     3ac:	98 8d       	ldd	r25, Y+24	; 0x18
     3ae:	01 97       	sbiw	r24, 0x01	; 1
     3b0:	98 8f       	std	Y+24, r25	; 0x18
     3b2:	8f 8b       	std	Y+23, r24	; 0x17

000003b4 <.L38>:
		while(__ticks)
     3b4:	8f 89       	ldd	r24, Y+23	; 0x17
     3b6:	98 8d       	ldd	r25, Y+24	; 0x18
     3b8:	00 97       	sbiw	r24, 0x00	; 0
     3ba:	61 f7       	brne	.-40     	; 0x394 <.L39>

000003bc <.Loc.61>:
		return;
     3bc:	15 c0       	rjmp	.+42     	; 0x3e8 <.L40>

000003be <.L54>:
		__ticks = (uint16_t)__tmp;
     3be:	6b 89       	ldd	r22, Y+19	; 0x13
     3c0:	7c 89       	ldd	r23, Y+20	; 0x14
     3c2:	8d 89       	ldd	r24, Y+21	; 0x15
     3c4:	9e 89       	ldd	r25, Y+22	; 0x16
     3c6:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     3ca:	dc 01       	movw	r26, r24
     3cc:	cb 01       	movw	r24, r22
     3ce:	98 8f       	std	Y+24, r25	; 0x18
     3d0:	8f 8b       	std	Y+23, r24	; 0x17

000003d2 <.L35>:
     3d2:	8f 89       	ldd	r24, Y+23	; 0x17
     3d4:	98 8d       	ldd	r25, Y+24	; 0x18
     3d6:	9c 8f       	std	Y+28, r25	; 0x1c
     3d8:	8b 8f       	std	Y+27, r24	; 0x1b

000003da <.LBB94>:
     3da:	8b 8d       	ldd	r24, Y+27	; 0x1b
     3dc:	9c 8d       	ldd	r25, Y+28	; 0x1c

000003de <.L1^B6>:
     3de:	01 97       	sbiw	r24, 0x01	; 1
     3e0:	f1 f7       	brne	.-4      	; 0x3de <.L1^B6>
     3e2:	9c 8f       	std	Y+28, r25	; 0x1c
     3e4:	8b 8f       	std	Y+27, r24	; 0x1b

000003e6 <.Loc.64>:
	...

000003e8 <.L40>:
    _delay_ms(2000);
    PORTB |= 0b00000110;
     3e8:	85 e2       	ldi	r24, 0x25	; 37
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	fc 01       	movw	r30, r24
     3ee:	20 81       	ld	r18, Z
     3f0:	85 e2       	ldi	r24, 0x25	; 37
     3f2:	90 e0       	ldi	r25, 0x00	; 0

000003f4 <.Loc.66>:
     3f4:	26 60       	ori	r18, 0x06	; 6
     3f6:	fc 01       	movw	r30, r24
     3f8:	20 83       	st	Z, r18

000003fa <.Loc.67>:
    PORTD = 0b00000101;
     3fa:	8b e2       	ldi	r24, 0x2B	; 43
     3fc:	90 e0       	ldi	r25, 0x00	; 0

000003fe <.Loc.68>:
     3fe:	25 e0       	ldi	r18, 0x05	; 5
     400:	fc 01       	movw	r30, r24
     402:	20 83       	st	Z, r18
     404:	80 e0       	ldi	r24, 0x00	; 0
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	aa e7       	ldi	r26, 0x7A	; 122
     40a:	b5 e4       	ldi	r27, 0x45	; 69
     40c:	89 83       	std	Y+1, r24	; 0x01
     40e:	9a 83       	std	Y+2, r25	; 0x02
     410:	ab 83       	std	Y+3, r26	; 0x03
     412:	bc 83       	std	Y+4, r27	; 0x04

00000414 <.LBB96>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     414:	20 e0       	ldi	r18, 0x00	; 0
     416:	30 e0       	ldi	r19, 0x00	; 0
     418:	4a ef       	ldi	r20, 0xFA	; 250
     41a:	54 e4       	ldi	r21, 0x44	; 68
     41c:	69 81       	ldd	r22, Y+1	; 0x01
     41e:	7a 81       	ldd	r23, Y+2	; 0x02
     420:	8b 81       	ldd	r24, Y+3	; 0x03
     422:	9c 81       	ldd	r25, Y+4	; 0x04
     424:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     428:	dc 01       	movw	r26, r24
     42a:	cb 01       	movw	r24, r22
     42c:	8d 83       	std	Y+5, r24	; 0x05
     42e:	9e 83       	std	Y+6, r25	; 0x06
     430:	af 83       	std	Y+7, r26	; 0x07
     432:	b8 87       	std	Y+8, r27	; 0x08

00000434 <.Loc.70>:
	if (__tmp < 1.0)
     434:	20 e0       	ldi	r18, 0x00	; 0
     436:	30 e0       	ldi	r19, 0x00	; 0
     438:	40 e8       	ldi	r20, 0x80	; 128
     43a:	5f e3       	ldi	r21, 0x3F	; 63
     43c:	6d 81       	ldd	r22, Y+5	; 0x05
     43e:	7e 81       	ldd	r23, Y+6	; 0x06
     440:	8f 81       	ldd	r24, Y+7	; 0x07
     442:	98 85       	ldd	r25, Y+8	; 0x08
     444:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__cmpsf2>
     448:	81 15       	cp	r24, r1
     44a:	2c f4       	brge	.+10     	; 0x456 <.L55>

0000044c <.Loc.71>:
		__ticks = 1;
     44c:	81 e0       	ldi	r24, 0x01	; 1
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	9a 87       	std	Y+10, r25	; 0x0a
     452:	89 87       	std	Y+9, r24	; 0x09
     454:	40 c0       	rjmp	.+128    	; 0x4d6 <.L43>

00000456 <.L55>:
	else if (__tmp > 65535)
     456:	20 e0       	ldi	r18, 0x00	; 0
     458:	3f ef       	ldi	r19, 0xFF	; 255
     45a:	4f e7       	ldi	r20, 0x7F	; 127
     45c:	57 e4       	ldi	r21, 0x47	; 71
     45e:	6d 81       	ldd	r22, Y+5	; 0x05
     460:	7e 81       	ldd	r23, Y+6	; 0x06
     462:	8f 81       	ldd	r24, Y+7	; 0x07
     464:	98 85       	ldd	r25, Y+8	; 0x08
     466:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <__gesf2>
     46a:	81 30       	cpi	r24, 0x01	; 1
     46c:	54 f1       	brlt	.+84     	; 0x4c2 <.L56>

0000046e <.Loc.73>:
		__ticks = (uint16_t) (__ms * 10.0);
     46e:	20 e0       	ldi	r18, 0x00	; 0
     470:	30 e0       	ldi	r19, 0x00	; 0
     472:	40 e2       	ldi	r20, 0x20	; 32
     474:	51 e4       	ldi	r21, 0x41	; 65
     476:	69 81       	ldd	r22, Y+1	; 0x01
     478:	7a 81       	ldd	r23, Y+2	; 0x02
     47a:	8b 81       	ldd	r24, Y+3	; 0x03
     47c:	9c 81       	ldd	r25, Y+4	; 0x04
     47e:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     482:	dc 01       	movw	r26, r24
     484:	cb 01       	movw	r24, r22

00000486 <.Loc.74>:
     486:	bc 01       	movw	r22, r24
     488:	cd 01       	movw	r24, r26
     48a:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     48e:	dc 01       	movw	r26, r24
     490:	cb 01       	movw	r24, r22
     492:	9a 87       	std	Y+10, r25	; 0x0a
     494:	89 87       	std	Y+9, r24	; 0x09

00000496 <.Loc.75>:
		while(__ticks)
     496:	10 c0       	rjmp	.+32     	; 0x4b8 <.L46>

00000498 <.L47>:
     498:	88 ec       	ldi	r24, 0xC8	; 200
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	9c 87       	std	Y+12, r25	; 0x0c
     49e:	8b 87       	std	Y+11, r24	; 0x0b

000004a0 <.LBB98>:
     4a0:	8b 85       	ldd	r24, Y+11	; 0x0b
     4a2:	9c 85       	ldd	r25, Y+12	; 0x0c

000004a4 <.L1^B7>:
     4a4:	01 97       	sbiw	r24, 0x01	; 1
     4a6:	f1 f7       	brne	.-4      	; 0x4a4 <.L1^B7>
     4a8:	9c 87       	std	Y+12, r25	; 0x0c
     4aa:	8b 87       	std	Y+11, r24	; 0x0b

000004ac <.Loc.77>:
	...

000004ae <.LBE98>:
			__ticks --;
     4ae:	89 85       	ldd	r24, Y+9	; 0x09
     4b0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b2:	01 97       	sbiw	r24, 0x01	; 1
     4b4:	9a 87       	std	Y+10, r25	; 0x0a
     4b6:	89 87       	std	Y+9, r24	; 0x09

000004b8 <.L46>:
		while(__ticks)
     4b8:	89 85       	ldd	r24, Y+9	; 0x09
     4ba:	9a 85       	ldd	r25, Y+10	; 0x0a
     4bc:	00 97       	sbiw	r24, 0x00	; 0
     4be:	61 f7       	brne	.-40     	; 0x498 <.L47>

000004c0 <.Loc.80>:
		return;
     4c0:	15 c0       	rjmp	.+42     	; 0x4ec <.L48>

000004c2 <.L56>:
		__ticks = (uint16_t)__tmp;
     4c2:	6d 81       	ldd	r22, Y+5	; 0x05
     4c4:	7e 81       	ldd	r23, Y+6	; 0x06
     4c6:	8f 81       	ldd	r24, Y+7	; 0x07
     4c8:	98 85       	ldd	r25, Y+8	; 0x08
     4ca:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     4ce:	dc 01       	movw	r26, r24
     4d0:	cb 01       	movw	r24, r22
     4d2:	9a 87       	std	Y+10, r25	; 0x0a
     4d4:	89 87       	std	Y+9, r24	; 0x09

000004d6 <.L43>:
     4d6:	89 85       	ldd	r24, Y+9	; 0x09
     4d8:	9a 85       	ldd	r25, Y+10	; 0x0a
     4da:	9e 87       	std	Y+14, r25	; 0x0e
     4dc:	8d 87       	std	Y+13, r24	; 0x0d

000004de <.LBB100>:
     4de:	8d 85       	ldd	r24, Y+13	; 0x0d
     4e0:	9e 85       	ldd	r25, Y+14	; 0x0e

000004e2 <.L1^B8>:
     4e2:	01 97       	sbiw	r24, 0x01	; 1
     4e4:	f1 f7       	brne	.-4      	; 0x4e2 <.L1^B8>
     4e6:	9e 87       	std	Y+14, r25	; 0x0e
     4e8:	8d 87       	std	Y+13, r24	; 0x0d

000004ea <.Loc.83>:
	...

000004ec <.L48>:
    _delay_ms(4000);
    PORTB &= 0b11111001;
     4ec:	85 e2       	ldi	r24, 0x25	; 37
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	fc 01       	movw	r30, r24
     4f2:	20 81       	ld	r18, Z

000004f4 <.Loc.85>:
     4f4:	85 e2       	ldi	r24, 0x25	; 37
     4f6:	90 e0       	ldi	r25, 0x00	; 0

000004f8 <.Loc.86>:
     4f8:	29 7f       	andi	r18, 0xF9	; 249
     4fa:	fc 01       	movw	r30, r24
     4fc:	20 83       	st	Z, r18

000004fe <.Loc.87>:
    PORTD = 0b00000000;
     4fe:	8b e2       	ldi	r24, 0x2B	; 43
     500:	90 e0       	ldi	r25, 0x00	; 0

00000502 <.Loc.88>:
     502:	fc 01       	movw	r30, r24
     504:	10 82       	st	Z, r1

00000506 <.Loc.89>:
}
     506:	00 00       	nop
     508:	6c 96       	adiw	r28, 0x1c	; 28
     50a:	0f b6       	in	r0, 0x3f	; 63
     50c:	f8 94       	cli
     50e:	de bf       	out	0x3e, r29	; 62
     510:	0f be       	out	0x3f, r0	; 63
     512:	cd bf       	out	0x3d, r28	; 61
     514:	df 91       	pop	r29
     516:	cf 91       	pop	r28
     518:	08 95       	ret

0000051a <steruj_jednym_silnikiem_przyciskami>:

void steruj_jednym_silnikiem_przyciskami() {
     51a:	cf 93       	push	r28
     51c:	df 93       	push	r29
     51e:	cd b7       	in	r28, 0x3d	; 61
     520:	de b7       	in	r29, 0x3e	; 62
     522:	e8 97       	sbiw	r28, 0x38	; 56
     524:	0f b6       	in	r0, 0x3f	; 63
     526:	f8 94       	cli
     528:	de bf       	out	0x3e, r29	; 62
     52a:	0f be       	out	0x3f, r0	; 63
     52c:	cd bf       	out	0x3d, r28	; 61

0000052e <.Loc.91>:
    PORTD = 0b00000001;
     52e:	8b e2       	ldi	r24, 0x2B	; 43
     530:	90 e0       	ldi	r25, 0x00	; 0

00000532 <.Loc.92>:
     532:	21 e0       	ldi	r18, 0x01	; 1
     534:	fc 01       	movw	r30, r24
     536:	20 83       	st	Z, r18

00000538 <.L94>:
    while (1) {
        // Zmiana włącz / wyłącz
        if (PIND & 0b10000000) {
     538:	89 e2       	ldi	r24, 0x29	; 41
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	fc 01       	movw	r30, r24
     53e:	80 81       	ld	r24, Z

00000540 <.Loc.94>:
     540:	81 15       	cp	r24, r1
     542:	0c f0       	brlt	.+2      	; 0x546 <.Loc.95>

00000544 <L0^A>:
     544:	7e c0       	rjmp	.+252    	; 0x642 <.L58>

00000546 <.Loc.95>:
            PORTB ^= 0b00000010;
     546:	85 e2       	ldi	r24, 0x25	; 37
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	fc 01       	movw	r30, r24
     54c:	30 81       	ld	r19, Z
     54e:	85 e2       	ldi	r24, 0x25	; 37
     550:	90 e0       	ldi	r25, 0x00	; 0

00000552 <.Loc.96>:
     552:	22 e0       	ldi	r18, 0x02	; 2
     554:	23 27       	eor	r18, r19
     556:	fc 01       	movw	r30, r24
     558:	20 83       	st	Z, r18
     55a:	80 e0       	ldi	r24, 0x00	; 0
     55c:	90 e0       	ldi	r25, 0x00	; 0
     55e:	aa e7       	ldi	r26, 0x7A	; 122
     560:	b4 e4       	ldi	r27, 0x44	; 68
     562:	89 83       	std	Y+1, r24	; 0x01
     564:	9a 83       	std	Y+2, r25	; 0x02
     566:	ab 83       	std	Y+3, r26	; 0x03
     568:	bc 83       	std	Y+4, r27	; 0x04

0000056a <.LBB102>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     56a:	20 e0       	ldi	r18, 0x00	; 0
     56c:	30 e0       	ldi	r19, 0x00	; 0
     56e:	4a ef       	ldi	r20, 0xFA	; 250
     570:	54 e4       	ldi	r21, 0x44	; 68
     572:	69 81       	ldd	r22, Y+1	; 0x01
     574:	7a 81       	ldd	r23, Y+2	; 0x02
     576:	8b 81       	ldd	r24, Y+3	; 0x03
     578:	9c 81       	ldd	r25, Y+4	; 0x04
     57a:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     57e:	dc 01       	movw	r26, r24
     580:	cb 01       	movw	r24, r22
     582:	8d 83       	std	Y+5, r24	; 0x05
     584:	9e 83       	std	Y+6, r25	; 0x06
     586:	af 83       	std	Y+7, r26	; 0x07
     588:	b8 87       	std	Y+8, r27	; 0x08

0000058a <.Loc.98>:
	if (__tmp < 1.0)
     58a:	20 e0       	ldi	r18, 0x00	; 0
     58c:	30 e0       	ldi	r19, 0x00	; 0
     58e:	40 e8       	ldi	r20, 0x80	; 128
     590:	5f e3       	ldi	r21, 0x3F	; 63
     592:	6d 81       	ldd	r22, Y+5	; 0x05
     594:	7e 81       	ldd	r23, Y+6	; 0x06
     596:	8f 81       	ldd	r24, Y+7	; 0x07
     598:	98 85       	ldd	r25, Y+8	; 0x08
     59a:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__cmpsf2>
     59e:	81 15       	cp	r24, r1
     5a0:	2c f4       	brge	.+10     	; 0x5ac <.L103>

000005a2 <.Loc.99>:
		__ticks = 1;
     5a2:	81 e0       	ldi	r24, 0x01	; 1
     5a4:	90 e0       	ldi	r25, 0x00	; 0
     5a6:	9a 87       	std	Y+10, r25	; 0x0a
     5a8:	89 87       	std	Y+9, r24	; 0x09
     5aa:	40 c0       	rjmp	.+128    	; 0x62c <.L61>

000005ac <.L103>:
	else if (__tmp > 65535)
     5ac:	20 e0       	ldi	r18, 0x00	; 0
     5ae:	3f ef       	ldi	r19, 0xFF	; 255
     5b0:	4f e7       	ldi	r20, 0x7F	; 127
     5b2:	57 e4       	ldi	r21, 0x47	; 71
     5b4:	6d 81       	ldd	r22, Y+5	; 0x05
     5b6:	7e 81       	ldd	r23, Y+6	; 0x06
     5b8:	8f 81       	ldd	r24, Y+7	; 0x07
     5ba:	98 85       	ldd	r25, Y+8	; 0x08
     5bc:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <__gesf2>
     5c0:	81 30       	cpi	r24, 0x01	; 1
     5c2:	54 f1       	brlt	.+84     	; 0x618 <.L104>

000005c4 <.Loc.101>:
		__ticks = (uint16_t) (__ms * 10.0);
     5c4:	20 e0       	ldi	r18, 0x00	; 0
     5c6:	30 e0       	ldi	r19, 0x00	; 0
     5c8:	40 e2       	ldi	r20, 0x20	; 32
     5ca:	51 e4       	ldi	r21, 0x41	; 65
     5cc:	69 81       	ldd	r22, Y+1	; 0x01
     5ce:	7a 81       	ldd	r23, Y+2	; 0x02
     5d0:	8b 81       	ldd	r24, Y+3	; 0x03
     5d2:	9c 81       	ldd	r25, Y+4	; 0x04
     5d4:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     5d8:	dc 01       	movw	r26, r24
     5da:	cb 01       	movw	r24, r22

000005dc <.Loc.102>:
     5dc:	bc 01       	movw	r22, r24
     5de:	cd 01       	movw	r24, r26
     5e0:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     5e4:	dc 01       	movw	r26, r24
     5e6:	cb 01       	movw	r24, r22
     5e8:	9a 87       	std	Y+10, r25	; 0x0a
     5ea:	89 87       	std	Y+9, r24	; 0x09

000005ec <.Loc.103>:
		while(__ticks)
     5ec:	10 c0       	rjmp	.+32     	; 0x60e <.L64>

000005ee <.L65>:
     5ee:	88 ec       	ldi	r24, 0xC8	; 200
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	9c 87       	std	Y+12, r25	; 0x0c
     5f4:	8b 87       	std	Y+11, r24	; 0x0b

000005f6 <.LBB104>:
     5f6:	8b 85       	ldd	r24, Y+11	; 0x0b
     5f8:	9c 85       	ldd	r25, Y+12	; 0x0c

000005fa <.L1^B9>:
     5fa:	01 97       	sbiw	r24, 0x01	; 1
     5fc:	f1 f7       	brne	.-4      	; 0x5fa <.L1^B9>
     5fe:	9c 87       	std	Y+12, r25	; 0x0c
     600:	8b 87       	std	Y+11, r24	; 0x0b

00000602 <.Loc.105>:
	...

00000604 <.LBE104>:
			__ticks --;
     604:	89 85       	ldd	r24, Y+9	; 0x09
     606:	9a 85       	ldd	r25, Y+10	; 0x0a
     608:	01 97       	sbiw	r24, 0x01	; 1
     60a:	9a 87       	std	Y+10, r25	; 0x0a
     60c:	89 87       	std	Y+9, r24	; 0x09

0000060e <.L64>:
		while(__ticks)
     60e:	89 85       	ldd	r24, Y+9	; 0x09
     610:	9a 85       	ldd	r25, Y+10	; 0x0a
     612:	00 97       	sbiw	r24, 0x00	; 0
     614:	61 f7       	brne	.-40     	; 0x5ee <.L65>

00000616 <.Loc.108>:
		return;
     616:	15 c0       	rjmp	.+42     	; 0x642 <.L58>

00000618 <.L104>:
		__ticks = (uint16_t)__tmp;
     618:	6d 81       	ldd	r22, Y+5	; 0x05
     61a:	7e 81       	ldd	r23, Y+6	; 0x06
     61c:	8f 81       	ldd	r24, Y+7	; 0x07
     61e:	98 85       	ldd	r25, Y+8	; 0x08
     620:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     624:	dc 01       	movw	r26, r24
     626:	cb 01       	movw	r24, r22
     628:	9a 87       	std	Y+10, r25	; 0x0a
     62a:	89 87       	std	Y+9, r24	; 0x09

0000062c <.L61>:
     62c:	89 85       	ldd	r24, Y+9	; 0x09
     62e:	9a 85       	ldd	r25, Y+10	; 0x0a
     630:	9e 87       	std	Y+14, r25	; 0x0e
     632:	8d 87       	std	Y+13, r24	; 0x0d

00000634 <.LBB106>:
     634:	8d 85       	ldd	r24, Y+13	; 0x0d
     636:	9e 85       	ldd	r25, Y+14	; 0x0e

00000638 <.L1^B10>:
     638:	01 97       	sbiw	r24, 0x01	; 1
     63a:	f1 f7       	brne	.-4      	; 0x638 <.L1^B10>
     63c:	9e 87       	std	Y+14, r25	; 0x0e
     63e:	8d 87       	std	Y+13, r24	; 0x0d

00000640 <.Loc.111>:
	...

00000642 <.L58>:
            _delay_ms(1000);
        }

        // Zmiana kierunku obrotu z chwilowym zatrzymaniem
        if (PIND & 0b00100000) {
     642:	89 e2       	ldi	r24, 0x29	; 41
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	fc 01       	movw	r30, r24
     648:	80 81       	ld	r24, Z

0000064a <.Loc.113>:
     64a:	88 2f       	mov	r24, r24
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	80 72       	andi	r24, 0x20	; 32
     650:	99 27       	eor	r25, r25

00000652 <.Loc.114>:
     652:	00 97       	sbiw	r24, 0x00	; 0
     654:	09 f4       	brne	.+2      	; 0x658 <.Loc.115>

00000656 <L0^A>:
     656:	70 cf       	rjmp	.-288    	; 0x538 <.L94>

00000658 <.Loc.115>:
            if (PORTB & 0b00000010) {
     658:	85 e2       	ldi	r24, 0x25	; 37
     65a:	90 e0       	ldi	r25, 0x00	; 0
     65c:	fc 01       	movw	r30, r24
     65e:	80 81       	ld	r24, Z

00000660 <.Loc.116>:
     660:	88 2f       	mov	r24, r24
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	82 70       	andi	r24, 0x02	; 2
     666:	99 27       	eor	r25, r25

00000668 <.Loc.117>:
     668:	00 97       	sbiw	r24, 0x00	; 0
     66a:	09 f4       	brne	.+2      	; 0x66e <.Loc.118>

0000066c <L0^A>:
     66c:	05 c1       	rjmp	.+522    	; 0x878 <.L68>

0000066e <.Loc.118>:
                PORTB &= 0b11111101;
     66e:	85 e2       	ldi	r24, 0x25	; 37
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	fc 01       	movw	r30, r24
     674:	20 81       	ld	r18, Z

00000676 <.Loc.119>:
     676:	85 e2       	ldi	r24, 0x25	; 37
     678:	90 e0       	ldi	r25, 0x00	; 0

0000067a <.Loc.120>:
     67a:	2d 7f       	andi	r18, 0xFD	; 253
     67c:	fc 01       	movw	r30, r24
     67e:	20 83       	st	Z, r18
     680:	80 e0       	ldi	r24, 0x00	; 0
     682:	90 e0       	ldi	r25, 0x00	; 0
     684:	a8 ec       	ldi	r26, 0xC8	; 200
     686:	b2 e4       	ldi	r27, 0x42	; 66
     688:	8d 8f       	std	Y+29, r24	; 0x1d
     68a:	9e 8f       	std	Y+30, r25	; 0x1e
     68c:	af 8f       	std	Y+31, r26	; 0x1f
     68e:	b8 a3       	std	Y+32, r27	; 0x20

00000690 <.LBB108>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     690:	20 e0       	ldi	r18, 0x00	; 0
     692:	30 e0       	ldi	r19, 0x00	; 0
     694:	4a ef       	ldi	r20, 0xFA	; 250
     696:	54 e4       	ldi	r21, 0x44	; 68
     698:	6d 8d       	ldd	r22, Y+29	; 0x1d
     69a:	7e 8d       	ldd	r23, Y+30	; 0x1e
     69c:	8f 8d       	ldd	r24, Y+31	; 0x1f
     69e:	98 a1       	ldd	r25, Y+32	; 0x20
     6a0:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     6a4:	dc 01       	movw	r26, r24
     6a6:	cb 01       	movw	r24, r22
     6a8:	89 a3       	std	Y+33, r24	; 0x21
     6aa:	9a a3       	std	Y+34, r25	; 0x22
     6ac:	ab a3       	std	Y+35, r26	; 0x23
     6ae:	bc a3       	std	Y+36, r27	; 0x24

000006b0 <.Loc.122>:
	if (__tmp < 1.0)
     6b0:	20 e0       	ldi	r18, 0x00	; 0
     6b2:	30 e0       	ldi	r19, 0x00	; 0
     6b4:	40 e8       	ldi	r20, 0x80	; 128
     6b6:	5f e3       	ldi	r21, 0x3F	; 63
     6b8:	69 a1       	ldd	r22, Y+33	; 0x21
     6ba:	7a a1       	ldd	r23, Y+34	; 0x22
     6bc:	8b a1       	ldd	r24, Y+35	; 0x23
     6be:	9c a1       	ldd	r25, Y+36	; 0x24
     6c0:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__cmpsf2>
     6c4:	81 15       	cp	r24, r1
     6c6:	2c f4       	brge	.+10     	; 0x6d2 <.L105>

000006c8 <.Loc.123>:
		__ticks = 1;
     6c8:	81 e0       	ldi	r24, 0x01	; 1
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	9e a3       	std	Y+38, r25	; 0x26
     6ce:	8d a3       	std	Y+37, r24	; 0x25
     6d0:	40 c0       	rjmp	.+128    	; 0x752 <.L71>

000006d2 <.L105>:
	else if (__tmp > 65535)
     6d2:	20 e0       	ldi	r18, 0x00	; 0
     6d4:	3f ef       	ldi	r19, 0xFF	; 255
     6d6:	4f e7       	ldi	r20, 0x7F	; 127
     6d8:	57 e4       	ldi	r21, 0x47	; 71
     6da:	69 a1       	ldd	r22, Y+33	; 0x21
     6dc:	7a a1       	ldd	r23, Y+34	; 0x22
     6de:	8b a1       	ldd	r24, Y+35	; 0x23
     6e0:	9c a1       	ldd	r25, Y+36	; 0x24
     6e2:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <__gesf2>
     6e6:	81 30       	cpi	r24, 0x01	; 1
     6e8:	54 f1       	brlt	.+84     	; 0x73e <.L106>

000006ea <.Loc.125>:
		__ticks = (uint16_t) (__ms * 10.0);
     6ea:	20 e0       	ldi	r18, 0x00	; 0
     6ec:	30 e0       	ldi	r19, 0x00	; 0
     6ee:	40 e2       	ldi	r20, 0x20	; 32
     6f0:	51 e4       	ldi	r21, 0x41	; 65
     6f2:	6d 8d       	ldd	r22, Y+29	; 0x1d
     6f4:	7e 8d       	ldd	r23, Y+30	; 0x1e
     6f6:	8f 8d       	ldd	r24, Y+31	; 0x1f
     6f8:	98 a1       	ldd	r25, Y+32	; 0x20
     6fa:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     6fe:	dc 01       	movw	r26, r24
     700:	cb 01       	movw	r24, r22

00000702 <.Loc.126>:
     702:	bc 01       	movw	r22, r24
     704:	cd 01       	movw	r24, r26
     706:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     70a:	dc 01       	movw	r26, r24
     70c:	cb 01       	movw	r24, r22
     70e:	9e a3       	std	Y+38, r25	; 0x26
     710:	8d a3       	std	Y+37, r24	; 0x25

00000712 <.Loc.127>:
		while(__ticks)
     712:	10 c0       	rjmp	.+32     	; 0x734 <.L74>

00000714 <.L75>:
     714:	88 ec       	ldi	r24, 0xC8	; 200
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	98 a7       	std	Y+40, r25	; 0x28
     71a:	8f a3       	std	Y+39, r24	; 0x27

0000071c <.LBB110>:
     71c:	8f a1       	ldd	r24, Y+39	; 0x27
     71e:	98 a5       	ldd	r25, Y+40	; 0x28

00000720 <.L1^B11>:
     720:	01 97       	sbiw	r24, 0x01	; 1
     722:	f1 f7       	brne	.-4      	; 0x720 <.L1^B11>
     724:	98 a7       	std	Y+40, r25	; 0x28
     726:	8f a3       	std	Y+39, r24	; 0x27

00000728 <.Loc.129>:
	...

0000072a <.LBE110>:
			__ticks --;
     72a:	8d a1       	ldd	r24, Y+37	; 0x25
     72c:	9e a1       	ldd	r25, Y+38	; 0x26
     72e:	01 97       	sbiw	r24, 0x01	; 1
     730:	9e a3       	std	Y+38, r25	; 0x26
     732:	8d a3       	std	Y+37, r24	; 0x25

00000734 <.L74>:
		while(__ticks)
     734:	8d a1       	ldd	r24, Y+37	; 0x25
     736:	9e a1       	ldd	r25, Y+38	; 0x26
     738:	00 97       	sbiw	r24, 0x00	; 0
     73a:	61 f7       	brne	.-40     	; 0x714 <.L75>

0000073c <.Loc.132>:
		return;
     73c:	15 c0       	rjmp	.+42     	; 0x768 <.L76>

0000073e <.L106>:
		__ticks = (uint16_t)__tmp;
     73e:	69 a1       	ldd	r22, Y+33	; 0x21
     740:	7a a1       	ldd	r23, Y+34	; 0x22
     742:	8b a1       	ldd	r24, Y+35	; 0x23
     744:	9c a1       	ldd	r25, Y+36	; 0x24
     746:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     74a:	dc 01       	movw	r26, r24
     74c:	cb 01       	movw	r24, r22
     74e:	9e a3       	std	Y+38, r25	; 0x26
     750:	8d a3       	std	Y+37, r24	; 0x25

00000752 <.L71>:
     752:	8d a1       	ldd	r24, Y+37	; 0x25
     754:	9e a1       	ldd	r25, Y+38	; 0x26
     756:	9a a7       	std	Y+42, r25	; 0x2a
     758:	89 a7       	std	Y+41, r24	; 0x29

0000075a <.LBB112>:
     75a:	89 a5       	ldd	r24, Y+41	; 0x29
     75c:	9a a5       	ldd	r25, Y+42	; 0x2a

0000075e <.L1^B12>:
     75e:	01 97       	sbiw	r24, 0x01	; 1
     760:	f1 f7       	brne	.-4      	; 0x75e <.L1^B12>
     762:	9a a7       	std	Y+42, r25	; 0x2a
     764:	89 a7       	std	Y+41, r24	; 0x29

00000766 <.Loc.135>:
	...

00000768 <.L76>:
                _delay_ms(100);
                PORTD ^= 0b00000011;
     768:	8b e2       	ldi	r24, 0x2B	; 43
     76a:	90 e0       	ldi	r25, 0x00	; 0
     76c:	fc 01       	movw	r30, r24
     76e:	30 81       	ld	r19, Z
     770:	8b e2       	ldi	r24, 0x2B	; 43
     772:	90 e0       	ldi	r25, 0x00	; 0

00000774 <.Loc.137>:
     774:	23 e0       	ldi	r18, 0x03	; 3
     776:	23 27       	eor	r18, r19
     778:	fc 01       	movw	r30, r24
     77a:	20 83       	st	Z, r18
     77c:	80 e0       	ldi	r24, 0x00	; 0
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	a8 ec       	ldi	r26, 0xC8	; 200
     782:	b2 e4       	ldi	r27, 0x42	; 66
     784:	8f 87       	std	Y+15, r24	; 0x0f
     786:	98 8b       	std	Y+16, r25	; 0x10
     788:	a9 8b       	std	Y+17, r26	; 0x11
     78a:	ba 8b       	std	Y+18, r27	; 0x12

0000078c <.LBB114>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     78c:	20 e0       	ldi	r18, 0x00	; 0
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	4a ef       	ldi	r20, 0xFA	; 250
     792:	54 e4       	ldi	r21, 0x44	; 68
     794:	6f 85       	ldd	r22, Y+15	; 0x0f
     796:	78 89       	ldd	r23, Y+16	; 0x10
     798:	89 89       	ldd	r24, Y+17	; 0x11
     79a:	9a 89       	ldd	r25, Y+18	; 0x12
     79c:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     7a0:	dc 01       	movw	r26, r24
     7a2:	cb 01       	movw	r24, r22
     7a4:	8b 8b       	std	Y+19, r24	; 0x13
     7a6:	9c 8b       	std	Y+20, r25	; 0x14
     7a8:	ad 8b       	std	Y+21, r26	; 0x15
     7aa:	be 8b       	std	Y+22, r27	; 0x16

000007ac <.Loc.139>:
	if (__tmp < 1.0)
     7ac:	20 e0       	ldi	r18, 0x00	; 0
     7ae:	30 e0       	ldi	r19, 0x00	; 0
     7b0:	40 e8       	ldi	r20, 0x80	; 128
     7b2:	5f e3       	ldi	r21, 0x3F	; 63
     7b4:	6b 89       	ldd	r22, Y+19	; 0x13
     7b6:	7c 89       	ldd	r23, Y+20	; 0x14
     7b8:	8d 89       	ldd	r24, Y+21	; 0x15
     7ba:	9e 89       	ldd	r25, Y+22	; 0x16
     7bc:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__cmpsf2>
     7c0:	81 15       	cp	r24, r1
     7c2:	2c f4       	brge	.+10     	; 0x7ce <.L107>

000007c4 <.Loc.140>:
		__ticks = 1;
     7c4:	81 e0       	ldi	r24, 0x01	; 1
     7c6:	90 e0       	ldi	r25, 0x00	; 0
     7c8:	98 8f       	std	Y+24, r25	; 0x18
     7ca:	8f 8b       	std	Y+23, r24	; 0x17
     7cc:	40 c0       	rjmp	.+128    	; 0x84e <.L79>

000007ce <.L107>:
	else if (__tmp > 65535)
     7ce:	20 e0       	ldi	r18, 0x00	; 0
     7d0:	3f ef       	ldi	r19, 0xFF	; 255
     7d2:	4f e7       	ldi	r20, 0x7F	; 127
     7d4:	57 e4       	ldi	r21, 0x47	; 71
     7d6:	6b 89       	ldd	r22, Y+19	; 0x13
     7d8:	7c 89       	ldd	r23, Y+20	; 0x14
     7da:	8d 89       	ldd	r24, Y+21	; 0x15
     7dc:	9e 89       	ldd	r25, Y+22	; 0x16
     7de:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <__gesf2>
     7e2:	81 30       	cpi	r24, 0x01	; 1
     7e4:	54 f1       	brlt	.+84     	; 0x83a <.L108>

000007e6 <.Loc.142>:
		__ticks = (uint16_t) (__ms * 10.0);
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e2       	ldi	r20, 0x20	; 32
     7ec:	51 e4       	ldi	r21, 0x41	; 65
     7ee:	6f 85       	ldd	r22, Y+15	; 0x0f
     7f0:	78 89       	ldd	r23, Y+16	; 0x10
     7f2:	89 89       	ldd	r24, Y+17	; 0x11
     7f4:	9a 89       	ldd	r25, Y+18	; 0x12
     7f6:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     7fa:	dc 01       	movw	r26, r24
     7fc:	cb 01       	movw	r24, r22

000007fe <.Loc.143>:
     7fe:	bc 01       	movw	r22, r24
     800:	cd 01       	movw	r24, r26
     802:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     806:	dc 01       	movw	r26, r24
     808:	cb 01       	movw	r24, r22
     80a:	98 8f       	std	Y+24, r25	; 0x18
     80c:	8f 8b       	std	Y+23, r24	; 0x17

0000080e <.Loc.144>:
		while(__ticks)
     80e:	10 c0       	rjmp	.+32     	; 0x830 <.L82>

00000810 <.L83>:
     810:	88 ec       	ldi	r24, 0xC8	; 200
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	9a 8f       	std	Y+26, r25	; 0x1a
     816:	89 8f       	std	Y+25, r24	; 0x19

00000818 <.LBB116>:
     818:	89 8d       	ldd	r24, Y+25	; 0x19
     81a:	9a 8d       	ldd	r25, Y+26	; 0x1a

0000081c <.L1^B13>:
     81c:	01 97       	sbiw	r24, 0x01	; 1
     81e:	f1 f7       	brne	.-4      	; 0x81c <.L1^B13>
     820:	9a 8f       	std	Y+26, r25	; 0x1a
     822:	89 8f       	std	Y+25, r24	; 0x19

00000824 <.Loc.146>:
	...

00000826 <.LBE116>:
			__ticks --;
     826:	8f 89       	ldd	r24, Y+23	; 0x17
     828:	98 8d       	ldd	r25, Y+24	; 0x18
     82a:	01 97       	sbiw	r24, 0x01	; 1
     82c:	98 8f       	std	Y+24, r25	; 0x18
     82e:	8f 8b       	std	Y+23, r24	; 0x17

00000830 <.L82>:
		while(__ticks)
     830:	8f 89       	ldd	r24, Y+23	; 0x17
     832:	98 8d       	ldd	r25, Y+24	; 0x18
     834:	00 97       	sbiw	r24, 0x00	; 0
     836:	61 f7       	brne	.-40     	; 0x810 <.L83>

00000838 <.Loc.149>:
		return;
     838:	15 c0       	rjmp	.+42     	; 0x864 <.L84>

0000083a <.L108>:
		__ticks = (uint16_t)__tmp;
     83a:	6b 89       	ldd	r22, Y+19	; 0x13
     83c:	7c 89       	ldd	r23, Y+20	; 0x14
     83e:	8d 89       	ldd	r24, Y+21	; 0x15
     840:	9e 89       	ldd	r25, Y+22	; 0x16
     842:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     846:	dc 01       	movw	r26, r24
     848:	cb 01       	movw	r24, r22
     84a:	98 8f       	std	Y+24, r25	; 0x18
     84c:	8f 8b       	std	Y+23, r24	; 0x17

0000084e <.L79>:
     84e:	8f 89       	ldd	r24, Y+23	; 0x17
     850:	98 8d       	ldd	r25, Y+24	; 0x18
     852:	9c 8f       	std	Y+28, r25	; 0x1c
     854:	8b 8f       	std	Y+27, r24	; 0x1b

00000856 <.LBB118>:
     856:	8b 8d       	ldd	r24, Y+27	; 0x1b
     858:	9c 8d       	ldd	r25, Y+28	; 0x1c

0000085a <.L1^B14>:
     85a:	01 97       	sbiw	r24, 0x01	; 1
     85c:	f1 f7       	brne	.-4      	; 0x85a <.L1^B14>
     85e:	9c 8f       	std	Y+28, r25	; 0x1c
     860:	8b 8f       	std	Y+27, r24	; 0x1b

00000862 <.Loc.152>:
	...

00000864 <.L84>:
                _delay_ms(100);
                PORTB |= 0b00000010;
     864:	85 e2       	ldi	r24, 0x25	; 37
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	fc 01       	movw	r30, r24
     86a:	20 81       	ld	r18, Z
     86c:	85 e2       	ldi	r24, 0x25	; 37
     86e:	90 e0       	ldi	r25, 0x00	; 0

00000870 <.Loc.154>:
     870:	22 60       	ori	r18, 0x02	; 2
     872:	fc 01       	movw	r30, r24
     874:	20 83       	st	Z, r18
     876:	0a c0       	rjmp	.+20     	; 0x88c <.L85>

00000878 <.L68>:
            } else {
                PORTD ^= 0b00000011;
     878:	8b e2       	ldi	r24, 0x2B	; 43
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	fc 01       	movw	r30, r24
     87e:	30 81       	ld	r19, Z
     880:	8b e2       	ldi	r24, 0x2B	; 43
     882:	90 e0       	ldi	r25, 0x00	; 0

00000884 <.Loc.156>:
     884:	23 e0       	ldi	r18, 0x03	; 3
     886:	23 27       	eor	r18, r19
     888:	fc 01       	movw	r30, r24
     88a:	20 83       	st	Z, r18

0000088c <.L85>:
     88c:	80 e0       	ldi	r24, 0x00	; 0
     88e:	90 e0       	ldi	r25, 0x00	; 0
     890:	aa e7       	ldi	r26, 0x7A	; 122
     892:	b4 e4       	ldi	r27, 0x44	; 68
     894:	8b a7       	std	Y+43, r24	; 0x2b
     896:	9c a7       	std	Y+44, r25	; 0x2c
     898:	ad a7       	std	Y+45, r26	; 0x2d
     89a:	be a7       	std	Y+46, r27	; 0x2e

0000089c <.LBB120>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     89c:	20 e0       	ldi	r18, 0x00	; 0
     89e:	30 e0       	ldi	r19, 0x00	; 0
     8a0:	4a ef       	ldi	r20, 0xFA	; 250
     8a2:	54 e4       	ldi	r21, 0x44	; 68
     8a4:	6b a5       	ldd	r22, Y+43	; 0x2b
     8a6:	7c a5       	ldd	r23, Y+44	; 0x2c
     8a8:	8d a5       	ldd	r24, Y+45	; 0x2d
     8aa:	9e a5       	ldd	r25, Y+46	; 0x2e
     8ac:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     8b0:	dc 01       	movw	r26, r24
     8b2:	cb 01       	movw	r24, r22
     8b4:	8f a7       	std	Y+47, r24	; 0x2f
     8b6:	98 ab       	std	Y+48, r25	; 0x30
     8b8:	a9 ab       	std	Y+49, r26	; 0x31
     8ba:	ba ab       	std	Y+50, r27	; 0x32

000008bc <.Loc.158>:
	if (__tmp < 1.0)
     8bc:	20 e0       	ldi	r18, 0x00	; 0
     8be:	30 e0       	ldi	r19, 0x00	; 0
     8c0:	40 e8       	ldi	r20, 0x80	; 128
     8c2:	5f e3       	ldi	r21, 0x3F	; 63
     8c4:	6f a5       	ldd	r22, Y+47	; 0x2f
     8c6:	78 a9       	ldd	r23, Y+48	; 0x30
     8c8:	89 a9       	ldd	r24, Y+49	; 0x31
     8ca:	9a a9       	ldd	r25, Y+50	; 0x32
     8cc:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__cmpsf2>
     8d0:	81 15       	cp	r24, r1
     8d2:	2c f4       	brge	.+10     	; 0x8de <.L109>

000008d4 <.Loc.159>:
		__ticks = 1;
     8d4:	81 e0       	ldi	r24, 0x01	; 1
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	9c ab       	std	Y+52, r25	; 0x34
     8da:	8b ab       	std	Y+51, r24	; 0x33
     8dc:	40 c0       	rjmp	.+128    	; 0x95e <.L88>

000008de <.L109>:
	else if (__tmp > 65535)
     8de:	20 e0       	ldi	r18, 0x00	; 0
     8e0:	3f ef       	ldi	r19, 0xFF	; 255
     8e2:	4f e7       	ldi	r20, 0x7F	; 127
     8e4:	57 e4       	ldi	r21, 0x47	; 71
     8e6:	6f a5       	ldd	r22, Y+47	; 0x2f
     8e8:	78 a9       	ldd	r23, Y+48	; 0x30
     8ea:	89 a9       	ldd	r24, Y+49	; 0x31
     8ec:	9a a9       	ldd	r25, Y+50	; 0x32
     8ee:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <__gesf2>
     8f2:	81 30       	cpi	r24, 0x01	; 1
     8f4:	54 f1       	brlt	.+84     	; 0x94a <.L110>

000008f6 <.Loc.161>:
		__ticks = (uint16_t) (__ms * 10.0);
     8f6:	20 e0       	ldi	r18, 0x00	; 0
     8f8:	30 e0       	ldi	r19, 0x00	; 0
     8fa:	40 e2       	ldi	r20, 0x20	; 32
     8fc:	51 e4       	ldi	r21, 0x41	; 65
     8fe:	6b a5       	ldd	r22, Y+43	; 0x2b
     900:	7c a5       	ldd	r23, Y+44	; 0x2c
     902:	8d a5       	ldd	r24, Y+45	; 0x2d
     904:	9e a5       	ldd	r25, Y+46	; 0x2e
     906:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     90a:	dc 01       	movw	r26, r24
     90c:	cb 01       	movw	r24, r22

0000090e <.Loc.162>:
     90e:	bc 01       	movw	r22, r24
     910:	cd 01       	movw	r24, r26
     912:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     916:	dc 01       	movw	r26, r24
     918:	cb 01       	movw	r24, r22
     91a:	9c ab       	std	Y+52, r25	; 0x34
     91c:	8b ab       	std	Y+51, r24	; 0x33

0000091e <.Loc.163>:
		while(__ticks)
     91e:	10 c0       	rjmp	.+32     	; 0x940 <.L91>

00000920 <.L92>:
     920:	88 ec       	ldi	r24, 0xC8	; 200
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	9e ab       	std	Y+54, r25	; 0x36
     926:	8d ab       	std	Y+53, r24	; 0x35

00000928 <.LBB122>:
     928:	8d a9       	ldd	r24, Y+53	; 0x35
     92a:	9e a9       	ldd	r25, Y+54	; 0x36

0000092c <.L1^B15>:
     92c:	01 97       	sbiw	r24, 0x01	; 1
     92e:	f1 f7       	brne	.-4      	; 0x92c <.L1^B15>
     930:	9e ab       	std	Y+54, r25	; 0x36
     932:	8d ab       	std	Y+53, r24	; 0x35

00000934 <.Loc.165>:
	...

00000936 <.LBE122>:
			__ticks --;
     936:	8b a9       	ldd	r24, Y+51	; 0x33
     938:	9c a9       	ldd	r25, Y+52	; 0x34
     93a:	01 97       	sbiw	r24, 0x01	; 1
     93c:	9c ab       	std	Y+52, r25	; 0x34
     93e:	8b ab       	std	Y+51, r24	; 0x33

00000940 <.L91>:
		while(__ticks)
     940:	8b a9       	ldd	r24, Y+51	; 0x33
     942:	9c a9       	ldd	r25, Y+52	; 0x34
     944:	00 97       	sbiw	r24, 0x00	; 0
     946:	61 f7       	brne	.-40     	; 0x920 <.L92>

00000948 <.Loc.168>:
		return;
     948:	15 c0       	rjmp	.+42     	; 0x974 <.L67>

0000094a <.L110>:
		__ticks = (uint16_t)__tmp;
     94a:	6f a5       	ldd	r22, Y+47	; 0x2f
     94c:	78 a9       	ldd	r23, Y+48	; 0x30
     94e:	89 a9       	ldd	r24, Y+49	; 0x31
     950:	9a a9       	ldd	r25, Y+50	; 0x32
     952:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     956:	dc 01       	movw	r26, r24
     958:	cb 01       	movw	r24, r22
     95a:	9c ab       	std	Y+52, r25	; 0x34
     95c:	8b ab       	std	Y+51, r24	; 0x33

0000095e <.L88>:
     95e:	8b a9       	ldd	r24, Y+51	; 0x33
     960:	9c a9       	ldd	r25, Y+52	; 0x34
     962:	98 af       	std	Y+56, r25	; 0x38
     964:	8f ab       	std	Y+55, r24	; 0x37

00000966 <.LBB124>:
     966:	8f a9       	ldd	r24, Y+55	; 0x37
     968:	98 ad       	ldd	r25, Y+56	; 0x38

0000096a <.L1^B16>:
     96a:	01 97       	sbiw	r24, 0x01	; 1
     96c:	f1 f7       	brne	.-4      	; 0x96a <.L1^B16>
     96e:	98 af       	std	Y+56, r25	; 0x38
     970:	8f ab       	std	Y+55, r24	; 0x37

00000972 <.Loc.171>:
	...

00000974 <.L67>:
        if (PIND & 0b10000000) {
     974:	e1 cd       	rjmp	.-1086   	; 0x538 <.L94>

00000976 <button_mode>:
        }
    }
}

// Returns true if mode button is pressed.
bool button_mode() {
     976:	cf 93       	push	r28
     978:	df 93       	push	r29
     97a:	cd b7       	in	r28, 0x3d	; 61
     97c:	de b7       	in	r29, 0x3e	; 62

0000097e <.Loc.174>:
    if (PIND & 0b10000000) { //D7
     97e:	89 e2       	ldi	r24, 0x29	; 41
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	fc 01       	movw	r30, r24
     984:	80 81       	ld	r24, Z

00000986 <.Loc.175>:
     986:	81 15       	cp	r24, r1
     988:	14 f4       	brge	.+4      	; 0x98e <.L112>

0000098a <.Loc.176>:
        return true;
     98a:	81 e0       	ldi	r24, 0x01	; 1
     98c:	01 c0       	rjmp	.+2      	; 0x990 <.L113>

0000098e <.L112>:
    }
    else {
        return false;
     98e:	80 e0       	ldi	r24, 0x00	; 0

00000990 <.L113>:
    }
}
     990:	df 91       	pop	r29
     992:	cf 91       	pop	r28
     994:	08 95       	ret

00000996 <button_shoot>:

// Returns true if shoot button is pressed.
bool button_shoot() {
     996:	cf 93       	push	r28
     998:	df 93       	push	r29
     99a:	cd b7       	in	r28, 0x3d	; 61
     99c:	de b7       	in	r29, 0x3e	; 62

0000099e <.Loc.180>:
    if (PIND & 0b00100000) { //D5
     99e:	89 e2       	ldi	r24, 0x29	; 41
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	fc 01       	movw	r30, r24
     9a4:	80 81       	ld	r24, Z

000009a6 <.Loc.181>:
     9a6:	88 2f       	mov	r24, r24
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	80 72       	andi	r24, 0x20	; 32
     9ac:	99 27       	eor	r25, r25

000009ae <.Loc.182>:
     9ae:	00 97       	sbiw	r24, 0x00	; 0
     9b0:	11 f0       	breq	.+4      	; 0x9b6 <.L115>

000009b2 <.Loc.183>:
        return true;
     9b2:	81 e0       	ldi	r24, 0x01	; 1
     9b4:	01 c0       	rjmp	.+2      	; 0x9b8 <.L116>

000009b6 <.L115>:
    }
    else {
        return false;
     9b6:	80 e0       	ldi	r24, 0x00	; 0

000009b8 <.L116>:
    }
}
     9b8:	df 91       	pop	r29
     9ba:	cf 91       	pop	r28
     9bc:	08 95       	ret

000009be <mode_update>:

// Check if port button pressed (or manual flag change has been made) and turn the diode on/off.
void mode_update() {
     9be:	cf 93       	push	r28
     9c0:	df 93       	push	r29
     9c2:	cd b7       	in	r28, 0x3d	; 61
     9c4:	de b7       	in	r29, 0x3e	; 62
     9c6:	2e 97       	sbiw	r28, 0x0e	; 14
     9c8:	0f b6       	in	r0, 0x3f	; 63
     9ca:	f8 94       	cli
     9cc:	de bf       	out	0x3e, r29	; 62
     9ce:	0f be       	out	0x3f, r0	; 63
     9d0:	cd bf       	out	0x3d, r28	; 61

000009d2 <.Loc.187>:
    if (button_mode()) {
     9d2:	0e 94 bb 04 	call	0x976	; 0x976 <button_mode>

000009d6 <.Loc.188>:
     9d6:	81 15       	cp	r24, r1
     9d8:	09 f4       	brne	.+2      	; 0x9dc <.Loc.189>

000009da <L0^A>:
     9da:	83 c0       	rjmp	.+262    	; 0xae2 <.L118>

000009dc <.Loc.189>:
        mode = !mode;
     9dc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <mode>
     9e0:	88 2f       	mov	r24, r24
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	21 e0       	ldi	r18, 0x01	; 1
     9e6:	00 97       	sbiw	r24, 0x00	; 0
     9e8:	09 f4       	brne	.+2      	; 0x9ec <.L119>
     9ea:	20 e0       	ldi	r18, 0x00	; 0

000009ec <.L119>:
     9ec:	81 e0       	ldi	r24, 0x01	; 1
     9ee:	82 27       	eor	r24, r18
     9f0:	88 2f       	mov	r24, r24
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	81 70       	andi	r24, 0x01	; 1

000009f6 <.Loc.190>:
     9f6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <mode>
     9fa:	80 e0       	ldi	r24, 0x00	; 0
     9fc:	90 e0       	ldi	r25, 0x00	; 0
     9fe:	aa e7       	ldi	r26, 0x7A	; 122
     a00:	b4 e4       	ldi	r27, 0x44	; 68
     a02:	89 83       	std	Y+1, r24	; 0x01
     a04:	9a 83       	std	Y+2, r25	; 0x02
     a06:	ab 83       	std	Y+3, r26	; 0x03
     a08:	bc 83       	std	Y+4, r27	; 0x04

00000a0a <.LBB126>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     a0a:	20 e0       	ldi	r18, 0x00	; 0
     a0c:	30 e0       	ldi	r19, 0x00	; 0
     a0e:	4a ef       	ldi	r20, 0xFA	; 250
     a10:	54 e4       	ldi	r21, 0x44	; 68
     a12:	69 81       	ldd	r22, Y+1	; 0x01
     a14:	7a 81       	ldd	r23, Y+2	; 0x02
     a16:	8b 81       	ldd	r24, Y+3	; 0x03
     a18:	9c 81       	ldd	r25, Y+4	; 0x04
     a1a:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     a1e:	dc 01       	movw	r26, r24
     a20:	cb 01       	movw	r24, r22
     a22:	8d 83       	std	Y+5, r24	; 0x05
     a24:	9e 83       	std	Y+6, r25	; 0x06
     a26:	af 83       	std	Y+7, r26	; 0x07
     a28:	b8 87       	std	Y+8, r27	; 0x08

00000a2a <.Loc.192>:
	if (__tmp < 1.0)
     a2a:	20 e0       	ldi	r18, 0x00	; 0
     a2c:	30 e0       	ldi	r19, 0x00	; 0
     a2e:	40 e8       	ldi	r20, 0x80	; 128
     a30:	5f e3       	ldi	r21, 0x3F	; 63
     a32:	6d 81       	ldd	r22, Y+5	; 0x05
     a34:	7e 81       	ldd	r23, Y+6	; 0x06
     a36:	8f 81       	ldd	r24, Y+7	; 0x07
     a38:	98 85       	ldd	r25, Y+8	; 0x08
     a3a:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__cmpsf2>
     a3e:	81 15       	cp	r24, r1
     a40:	2c f4       	brge	.+10     	; 0xa4c <.L132>

00000a42 <.Loc.193>:
		__ticks = 1;
     a42:	81 e0       	ldi	r24, 0x01	; 1
     a44:	90 e0       	ldi	r25, 0x00	; 0
     a46:	9a 87       	std	Y+10, r25	; 0x0a
     a48:	89 87       	std	Y+9, r24	; 0x09
     a4a:	40 c0       	rjmp	.+128    	; 0xacc <.L122>

00000a4c <.L132>:
	else if (__tmp > 65535)
     a4c:	20 e0       	ldi	r18, 0x00	; 0
     a4e:	3f ef       	ldi	r19, 0xFF	; 255
     a50:	4f e7       	ldi	r20, 0x7F	; 127
     a52:	57 e4       	ldi	r21, 0x47	; 71
     a54:	6d 81       	ldd	r22, Y+5	; 0x05
     a56:	7e 81       	ldd	r23, Y+6	; 0x06
     a58:	8f 81       	ldd	r24, Y+7	; 0x07
     a5a:	98 85       	ldd	r25, Y+8	; 0x08
     a5c:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <__gesf2>
     a60:	81 30       	cpi	r24, 0x01	; 1
     a62:	54 f1       	brlt	.+84     	; 0xab8 <.L133>

00000a64 <.Loc.195>:
		__ticks = (uint16_t) (__ms * 10.0);
     a64:	20 e0       	ldi	r18, 0x00	; 0
     a66:	30 e0       	ldi	r19, 0x00	; 0
     a68:	40 e2       	ldi	r20, 0x20	; 32
     a6a:	51 e4       	ldi	r21, 0x41	; 65
     a6c:	69 81       	ldd	r22, Y+1	; 0x01
     a6e:	7a 81       	ldd	r23, Y+2	; 0x02
     a70:	8b 81       	ldd	r24, Y+3	; 0x03
     a72:	9c 81       	ldd	r25, Y+4	; 0x04
     a74:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     a78:	dc 01       	movw	r26, r24
     a7a:	cb 01       	movw	r24, r22

00000a7c <.Loc.196>:
     a7c:	bc 01       	movw	r22, r24
     a7e:	cd 01       	movw	r24, r26
     a80:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     a84:	dc 01       	movw	r26, r24
     a86:	cb 01       	movw	r24, r22
     a88:	9a 87       	std	Y+10, r25	; 0x0a
     a8a:	89 87       	std	Y+9, r24	; 0x09

00000a8c <.Loc.197>:
		while(__ticks)
     a8c:	10 c0       	rjmp	.+32     	; 0xaae <.L125>

00000a8e <.L126>:
     a8e:	88 ec       	ldi	r24, 0xC8	; 200
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	9c 87       	std	Y+12, r25	; 0x0c
     a94:	8b 87       	std	Y+11, r24	; 0x0b

00000a96 <.LBB128>:
     a96:	8b 85       	ldd	r24, Y+11	; 0x0b
     a98:	9c 85       	ldd	r25, Y+12	; 0x0c

00000a9a <.L1^B17>:
     a9a:	01 97       	sbiw	r24, 0x01	; 1
     a9c:	f1 f7       	brne	.-4      	; 0xa9a <.L1^B17>
     a9e:	9c 87       	std	Y+12, r25	; 0x0c
     aa0:	8b 87       	std	Y+11, r24	; 0x0b

00000aa2 <.Loc.199>:
	...

00000aa4 <.LBE128>:
			__ticks --;
     aa4:	89 85       	ldd	r24, Y+9	; 0x09
     aa6:	9a 85       	ldd	r25, Y+10	; 0x0a
     aa8:	01 97       	sbiw	r24, 0x01	; 1
     aaa:	9a 87       	std	Y+10, r25	; 0x0a
     aac:	89 87       	std	Y+9, r24	; 0x09

00000aae <.L125>:
		while(__ticks)
     aae:	89 85       	ldd	r24, Y+9	; 0x09
     ab0:	9a 85       	ldd	r25, Y+10	; 0x0a
     ab2:	00 97       	sbiw	r24, 0x00	; 0
     ab4:	61 f7       	brne	.-40     	; 0xa8e <.L126>

00000ab6 <.Loc.202>:
		return;
     ab6:	15 c0       	rjmp	.+42     	; 0xae2 <.L118>

00000ab8 <.L133>:
		__ticks = (uint16_t)__tmp;
     ab8:	6d 81       	ldd	r22, Y+5	; 0x05
     aba:	7e 81       	ldd	r23, Y+6	; 0x06
     abc:	8f 81       	ldd	r24, Y+7	; 0x07
     abe:	98 85       	ldd	r25, Y+8	; 0x08
     ac0:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     ac4:	dc 01       	movw	r26, r24
     ac6:	cb 01       	movw	r24, r22
     ac8:	9a 87       	std	Y+10, r25	; 0x0a
     aca:	89 87       	std	Y+9, r24	; 0x09

00000acc <.L122>:
     acc:	89 85       	ldd	r24, Y+9	; 0x09
     ace:	9a 85       	ldd	r25, Y+10	; 0x0a
     ad0:	9e 87       	std	Y+14, r25	; 0x0e
     ad2:	8d 87       	std	Y+13, r24	; 0x0d

00000ad4 <.LBB130>:
     ad4:	8d 85       	ldd	r24, Y+13	; 0x0d
     ad6:	9e 85       	ldd	r25, Y+14	; 0x0e

00000ad8 <.L1^B18>:
     ad8:	01 97       	sbiw	r24, 0x01	; 1
     ada:	f1 f7       	brne	.-4      	; 0xad8 <.L1^B18>
     adc:	9e 87       	std	Y+14, r25	; 0x0e
     ade:	8d 87       	std	Y+13, r24	; 0x0d

00000ae0 <.Loc.205>:
	...

00000ae2 <.L118>:
        _delay_ms(1000);
    }

    if (mode) {
     ae2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <mode>

00000ae6 <.Loc.207>:
     ae6:	81 15       	cp	r24, r1
     ae8:	51 f0       	breq	.+20     	; 0xafe <.L128>

00000aea <.Loc.208>:
        PORTB |= 0b00000001;
     aea:	85 e2       	ldi	r24, 0x25	; 37
     aec:	90 e0       	ldi	r25, 0x00	; 0
     aee:	fc 01       	movw	r30, r24
     af0:	20 81       	ld	r18, Z
     af2:	85 e2       	ldi	r24, 0x25	; 37
     af4:	90 e0       	ldi	r25, 0x00	; 0

00000af6 <.Loc.209>:
     af6:	21 60       	ori	r18, 0x01	; 1
     af8:	fc 01       	movw	r30, r24
     afa:	20 83       	st	Z, r18

00000afc <.Loc.210>:
    }
    else {
        PORTB &= 0b11111110;
    }
}
     afc:	09 c0       	rjmp	.+18     	; 0xb10 <.L134>

00000afe <.L128>:
        PORTB &= 0b11111110;
     afe:	85 e2       	ldi	r24, 0x25	; 37
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	fc 01       	movw	r30, r24
     b04:	20 81       	ld	r18, Z

00000b06 <.Loc.212>:
     b06:	85 e2       	ldi	r24, 0x25	; 37
     b08:	90 e0       	ldi	r25, 0x00	; 0

00000b0a <.Loc.213>:
     b0a:	2e 7f       	andi	r18, 0xFE	; 254
     b0c:	fc 01       	movw	r30, r24
     b0e:	20 83       	st	Z, r18

00000b10 <.L134>:
}
     b10:	00 00       	nop
     b12:	2e 96       	adiw	r28, 0x0e	; 14
     b14:	0f b6       	in	r0, 0x3f	; 63
     b16:	f8 94       	cli
     b18:	de bf       	out	0x3e, r29	; 62
     b1a:	0f be       	out	0x3f, r0	; 63
     b1c:	cd bf       	out	0x3d, r28	; 61
     b1e:	df 91       	pop	r29
     b20:	cf 91       	pop	r28
     b22:	08 95       	ret

00000b24 <a_enable>:

// Turn engine A on (the one for rollers).
void a_enable() {
     b24:	cf 93       	push	r28
     b26:	df 93       	push	r29
     b28:	cd b7       	in	r28, 0x3d	; 61
     b2a:	de b7       	in	r29, 0x3e	; 62

00000b2c <.Loc.216>:
    PORTB |= 0b00000010; // B1 on
     b2c:	85 e2       	ldi	r24, 0x25	; 37
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	fc 01       	movw	r30, r24
     b32:	20 81       	ld	r18, Z
     b34:	85 e2       	ldi	r24, 0x25	; 37
     b36:	90 e0       	ldi	r25, 0x00	; 0

00000b38 <.Loc.217>:
     b38:	22 60       	ori	r18, 0x02	; 2
     b3a:	fc 01       	movw	r30, r24
     b3c:	20 83       	st	Z, r18

00000b3e <.Loc.218>:
}
     b3e:	00 00       	nop
     b40:	df 91       	pop	r29
     b42:	cf 91       	pop	r28
     b44:	08 95       	ret

00000b46 <a_disable>:

// Turn engine A off (the one for rollers).
void a_disable() {
     b46:	cf 93       	push	r28
     b48:	df 93       	push	r29
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62

00000b4e <.Loc.220>:
    PORTB &= 0b11111101; // B1 off
     b4e:	85 e2       	ldi	r24, 0x25	; 37
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	fc 01       	movw	r30, r24
     b54:	20 81       	ld	r18, Z

00000b56 <.Loc.221>:
     b56:	85 e2       	ldi	r24, 0x25	; 37
     b58:	90 e0       	ldi	r25, 0x00	; 0

00000b5a <.Loc.222>:
     b5a:	2d 7f       	andi	r18, 0xFD	; 253
     b5c:	fc 01       	movw	r30, r24
     b5e:	20 83       	st	Z, r18

00000b60 <.Loc.223>:
}
     b60:	00 00       	nop
     b62:	df 91       	pop	r29
     b64:	cf 91       	pop	r28
     b66:	08 95       	ret

00000b68 <b_enable>:

// Turn engine B on (the one for loading).
void b_enable() {
     b68:	cf 93       	push	r28
     b6a:	df 93       	push	r29
     b6c:	cd b7       	in	r28, 0x3d	; 61
     b6e:	de b7       	in	r29, 0x3e	; 62

00000b70 <.Loc.225>:
    PORTB |= 0b00000100; // B2 on
     b70:	85 e2       	ldi	r24, 0x25	; 37
     b72:	90 e0       	ldi	r25, 0x00	; 0
     b74:	fc 01       	movw	r30, r24
     b76:	20 81       	ld	r18, Z
     b78:	85 e2       	ldi	r24, 0x25	; 37
     b7a:	90 e0       	ldi	r25, 0x00	; 0

00000b7c <.Loc.226>:
     b7c:	24 60       	ori	r18, 0x04	; 4
     b7e:	fc 01       	movw	r30, r24
     b80:	20 83       	st	Z, r18

00000b82 <.Loc.227>:
}
     b82:	00 00       	nop
     b84:	df 91       	pop	r29
     b86:	cf 91       	pop	r28
     b88:	08 95       	ret

00000b8a <b_disable>:

// Turn engine B off (the one for loading).
void b_disable() {
     b8a:	cf 93       	push	r28
     b8c:	df 93       	push	r29
     b8e:	cd b7       	in	r28, 0x3d	; 61
     b90:	de b7       	in	r29, 0x3e	; 62

00000b92 <.Loc.229>:
    PORTB &= 0b11111011; // B2 off
     b92:	85 e2       	ldi	r24, 0x25	; 37
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	fc 01       	movw	r30, r24
     b98:	20 81       	ld	r18, Z

00000b9a <.Loc.230>:
     b9a:	85 e2       	ldi	r24, 0x25	; 37
     b9c:	90 e0       	ldi	r25, 0x00	; 0

00000b9e <.Loc.231>:
     b9e:	2b 7f       	andi	r18, 0xFB	; 251
     ba0:	fc 01       	movw	r30, r24
     ba2:	20 83       	st	Z, r18

00000ba4 <.Loc.232>:
}
     ba4:	00 00       	nop
     ba6:	df 91       	pop	r29
     ba8:	cf 91       	pop	r28
     baa:	08 95       	ret

00000bac <shoot>:

// Da ting goes SKRRA!
void shoot() {
     bac:	cf 93       	push	r28
     bae:	df 93       	push	r29
     bb0:	cd b7       	in	r28, 0x3d	; 61
     bb2:	de b7       	in	r29, 0x3e	; 62
     bb4:	aa 97       	sbiw	r28, 0x2a	; 42
     bb6:	0f b6       	in	r0, 0x3f	; 63
     bb8:	f8 94       	cli
     bba:	de bf       	out	0x3e, r29	; 62
     bbc:	0f be       	out	0x3f, r0	; 63
     bbe:	cd bf       	out	0x3d, r28	; 61

00000bc0 <.Loc.234>:
    a_enable();
     bc0:	0e 94 92 05 	call	0xb24	; 0xb24 <a_enable>

00000bc4 <.Loc.235>:
    b_enable();
     bc4:	0e 94 b4 05 	call	0xb68	; 0xb68 <b_enable>
     bc8:	80 e0       	ldi	r24, 0x00	; 0
     bca:	90 e8       	ldi	r25, 0x80	; 128
     bcc:	ab e3       	ldi	r26, 0x3B	; 59
     bce:	b5 e4       	ldi	r27, 0x45	; 69
     bd0:	8d 8f       	std	Y+29, r24	; 0x1d
     bd2:	9e 8f       	std	Y+30, r25	; 0x1e
     bd4:	af 8f       	std	Y+31, r26	; 0x1f
     bd6:	b8 a3       	std	Y+32, r27	; 0x20

00000bd8 <.LBB132>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     bd8:	20 e0       	ldi	r18, 0x00	; 0
     bda:	30 e0       	ldi	r19, 0x00	; 0
     bdc:	4a ef       	ldi	r20, 0xFA	; 250
     bde:	54 e4       	ldi	r21, 0x44	; 68
     be0:	6d 8d       	ldd	r22, Y+29	; 0x1d
     be2:	7e 8d       	ldd	r23, Y+30	; 0x1e
     be4:	8f 8d       	ldd	r24, Y+31	; 0x1f
     be6:	98 a1       	ldd	r25, Y+32	; 0x20
     be8:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     bec:	dc 01       	movw	r26, r24
     bee:	cb 01       	movw	r24, r22
     bf0:	89 a3       	std	Y+33, r24	; 0x21
     bf2:	9a a3       	std	Y+34, r25	; 0x22
     bf4:	ab a3       	std	Y+35, r26	; 0x23
     bf6:	bc a3       	std	Y+36, r27	; 0x24

00000bf8 <.Loc.237>:
	if (__tmp < 1.0)
     bf8:	20 e0       	ldi	r18, 0x00	; 0
     bfa:	30 e0       	ldi	r19, 0x00	; 0
     bfc:	40 e8       	ldi	r20, 0x80	; 128
     bfe:	5f e3       	ldi	r21, 0x3F	; 63
     c00:	69 a1       	ldd	r22, Y+33	; 0x21
     c02:	7a a1       	ldd	r23, Y+34	; 0x22
     c04:	8b a1       	ldd	r24, Y+35	; 0x23
     c06:	9c a1       	ldd	r25, Y+36	; 0x24
     c08:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__cmpsf2>
     c0c:	81 15       	cp	r24, r1
     c0e:	2c f4       	brge	.+10     	; 0xc1a <.L170>

00000c10 <.Loc.238>:
		__ticks = 1;
     c10:	81 e0       	ldi	r24, 0x01	; 1
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	9e a3       	std	Y+38, r25	; 0x26
     c16:	8d a3       	std	Y+37, r24	; 0x25
     c18:	40 c0       	rjmp	.+128    	; 0xc9a <.L142>

00000c1a <.L170>:
	else if (__tmp > 65535)
     c1a:	20 e0       	ldi	r18, 0x00	; 0
     c1c:	3f ef       	ldi	r19, 0xFF	; 255
     c1e:	4f e7       	ldi	r20, 0x7F	; 127
     c20:	57 e4       	ldi	r21, 0x47	; 71
     c22:	69 a1       	ldd	r22, Y+33	; 0x21
     c24:	7a a1       	ldd	r23, Y+34	; 0x22
     c26:	8b a1       	ldd	r24, Y+35	; 0x23
     c28:	9c a1       	ldd	r25, Y+36	; 0x24
     c2a:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <__gesf2>
     c2e:	81 30       	cpi	r24, 0x01	; 1
     c30:	54 f1       	brlt	.+84     	; 0xc86 <.L171>

00000c32 <.Loc.240>:
		__ticks = (uint16_t) (__ms * 10.0);
     c32:	20 e0       	ldi	r18, 0x00	; 0
     c34:	30 e0       	ldi	r19, 0x00	; 0
     c36:	40 e2       	ldi	r20, 0x20	; 32
     c38:	51 e4       	ldi	r21, 0x41	; 65
     c3a:	6d 8d       	ldd	r22, Y+29	; 0x1d
     c3c:	7e 8d       	ldd	r23, Y+30	; 0x1e
     c3e:	8f 8d       	ldd	r24, Y+31	; 0x1f
     c40:	98 a1       	ldd	r25, Y+32	; 0x20
     c42:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     c46:	dc 01       	movw	r26, r24
     c48:	cb 01       	movw	r24, r22

00000c4a <.Loc.241>:
     c4a:	bc 01       	movw	r22, r24
     c4c:	cd 01       	movw	r24, r26
     c4e:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     c52:	dc 01       	movw	r26, r24
     c54:	cb 01       	movw	r24, r22
     c56:	9e a3       	std	Y+38, r25	; 0x26
     c58:	8d a3       	std	Y+37, r24	; 0x25

00000c5a <.Loc.242>:
		while(__ticks)
     c5a:	10 c0       	rjmp	.+32     	; 0xc7c <.L145>

00000c5c <.L146>:
     c5c:	88 ec       	ldi	r24, 0xC8	; 200
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	98 a7       	std	Y+40, r25	; 0x28
     c62:	8f a3       	std	Y+39, r24	; 0x27

00000c64 <.LBB134>:
     c64:	8f a1       	ldd	r24, Y+39	; 0x27
     c66:	98 a5       	ldd	r25, Y+40	; 0x28

00000c68 <.L1^B19>:
     c68:	01 97       	sbiw	r24, 0x01	; 1
     c6a:	f1 f7       	brne	.-4      	; 0xc68 <.L1^B19>
     c6c:	98 a7       	std	Y+40, r25	; 0x28
     c6e:	8f a3       	std	Y+39, r24	; 0x27

00000c70 <.Loc.244>:
	...

00000c72 <.LBE134>:
			__ticks --;
     c72:	8d a1       	ldd	r24, Y+37	; 0x25
     c74:	9e a1       	ldd	r25, Y+38	; 0x26
     c76:	01 97       	sbiw	r24, 0x01	; 1
     c78:	9e a3       	std	Y+38, r25	; 0x26
     c7a:	8d a3       	std	Y+37, r24	; 0x25

00000c7c <.L145>:
		while(__ticks)
     c7c:	8d a1       	ldd	r24, Y+37	; 0x25
     c7e:	9e a1       	ldd	r25, Y+38	; 0x26
     c80:	00 97       	sbiw	r24, 0x00	; 0
     c82:	61 f7       	brne	.-40     	; 0xc5c <.L146>

00000c84 <.Loc.247>:
		return;
     c84:	15 c0       	rjmp	.+42     	; 0xcb0 <.L147>

00000c86 <.L171>:
		__ticks = (uint16_t)__tmp;
     c86:	69 a1       	ldd	r22, Y+33	; 0x21
     c88:	7a a1       	ldd	r23, Y+34	; 0x22
     c8a:	8b a1       	ldd	r24, Y+35	; 0x23
     c8c:	9c a1       	ldd	r25, Y+36	; 0x24
     c8e:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     c92:	dc 01       	movw	r26, r24
     c94:	cb 01       	movw	r24, r22
     c96:	9e a3       	std	Y+38, r25	; 0x26
     c98:	8d a3       	std	Y+37, r24	; 0x25

00000c9a <.L142>:
     c9a:	8d a1       	ldd	r24, Y+37	; 0x25
     c9c:	9e a1       	ldd	r25, Y+38	; 0x26
     c9e:	9a a7       	std	Y+42, r25	; 0x2a
     ca0:	89 a7       	std	Y+41, r24	; 0x29

00000ca2 <.LBB136>:
     ca2:	89 a5       	ldd	r24, Y+41	; 0x29
     ca4:	9a a5       	ldd	r25, Y+42	; 0x2a

00000ca6 <.L1^B20>:
     ca6:	01 97       	sbiw	r24, 0x01	; 1
     ca8:	f1 f7       	brne	.-4      	; 0xca6 <.L1^B20>
     caa:	9a a7       	std	Y+42, r25	; 0x2a
     cac:	89 a7       	std	Y+41, r24	; 0x29

00000cae <.Loc.250>:
	...

00000cb0 <.L147>:

    _delay_ms(3000);

    b_disable();
     cb0:	0e 94 c5 05 	call	0xb8a	; 0xb8a <b_disable>
     cb4:	80 e0       	ldi	r24, 0x00	; 0
     cb6:	90 e8       	ldi	r25, 0x80	; 128
     cb8:	ab e3       	ldi	r26, 0x3B	; 59
     cba:	b5 e4       	ldi	r27, 0x45	; 69
     cbc:	8f 87       	std	Y+15, r24	; 0x0f
     cbe:	98 8b       	std	Y+16, r25	; 0x10
     cc0:	a9 8b       	std	Y+17, r26	; 0x11
     cc2:	ba 8b       	std	Y+18, r27	; 0x12

00000cc4 <.LBB138>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     cc4:	20 e0       	ldi	r18, 0x00	; 0
     cc6:	30 e0       	ldi	r19, 0x00	; 0
     cc8:	4a ef       	ldi	r20, 0xFA	; 250
     cca:	54 e4       	ldi	r21, 0x44	; 68
     ccc:	6f 85       	ldd	r22, Y+15	; 0x0f
     cce:	78 89       	ldd	r23, Y+16	; 0x10
     cd0:	89 89       	ldd	r24, Y+17	; 0x11
     cd2:	9a 89       	ldd	r25, Y+18	; 0x12
     cd4:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     cd8:	dc 01       	movw	r26, r24
     cda:	cb 01       	movw	r24, r22
     cdc:	8b 8b       	std	Y+19, r24	; 0x13
     cde:	9c 8b       	std	Y+20, r25	; 0x14
     ce0:	ad 8b       	std	Y+21, r26	; 0x15
     ce2:	be 8b       	std	Y+22, r27	; 0x16

00000ce4 <.Loc.253>:
	if (__tmp < 1.0)
     ce4:	20 e0       	ldi	r18, 0x00	; 0
     ce6:	30 e0       	ldi	r19, 0x00	; 0
     ce8:	40 e8       	ldi	r20, 0x80	; 128
     cea:	5f e3       	ldi	r21, 0x3F	; 63
     cec:	6b 89       	ldd	r22, Y+19	; 0x13
     cee:	7c 89       	ldd	r23, Y+20	; 0x14
     cf0:	8d 89       	ldd	r24, Y+21	; 0x15
     cf2:	9e 89       	ldd	r25, Y+22	; 0x16
     cf4:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__cmpsf2>
     cf8:	81 15       	cp	r24, r1
     cfa:	2c f4       	brge	.+10     	; 0xd06 <.L172>

00000cfc <.Loc.254>:
		__ticks = 1;
     cfc:	81 e0       	ldi	r24, 0x01	; 1
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	98 8f       	std	Y+24, r25	; 0x18
     d02:	8f 8b       	std	Y+23, r24	; 0x17
     d04:	40 c0       	rjmp	.+128    	; 0xd86 <.L150>

00000d06 <.L172>:
	else if (__tmp > 65535)
     d06:	20 e0       	ldi	r18, 0x00	; 0
     d08:	3f ef       	ldi	r19, 0xFF	; 255
     d0a:	4f e7       	ldi	r20, 0x7F	; 127
     d0c:	57 e4       	ldi	r21, 0x47	; 71
     d0e:	6b 89       	ldd	r22, Y+19	; 0x13
     d10:	7c 89       	ldd	r23, Y+20	; 0x14
     d12:	8d 89       	ldd	r24, Y+21	; 0x15
     d14:	9e 89       	ldd	r25, Y+22	; 0x16
     d16:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <__gesf2>
     d1a:	81 30       	cpi	r24, 0x01	; 1
     d1c:	54 f1       	brlt	.+84     	; 0xd72 <.L173>

00000d1e <.Loc.256>:
		__ticks = (uint16_t) (__ms * 10.0);
     d1e:	20 e0       	ldi	r18, 0x00	; 0
     d20:	30 e0       	ldi	r19, 0x00	; 0
     d22:	40 e2       	ldi	r20, 0x20	; 32
     d24:	51 e4       	ldi	r21, 0x41	; 65
     d26:	6f 85       	ldd	r22, Y+15	; 0x0f
     d28:	78 89       	ldd	r23, Y+16	; 0x10
     d2a:	89 89       	ldd	r24, Y+17	; 0x11
     d2c:	9a 89       	ldd	r25, Y+18	; 0x12
     d2e:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     d32:	dc 01       	movw	r26, r24
     d34:	cb 01       	movw	r24, r22

00000d36 <.Loc.257>:
     d36:	bc 01       	movw	r22, r24
     d38:	cd 01       	movw	r24, r26
     d3a:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     d3e:	dc 01       	movw	r26, r24
     d40:	cb 01       	movw	r24, r22
     d42:	98 8f       	std	Y+24, r25	; 0x18
     d44:	8f 8b       	std	Y+23, r24	; 0x17

00000d46 <.Loc.258>:
		while(__ticks)
     d46:	10 c0       	rjmp	.+32     	; 0xd68 <.L153>

00000d48 <.L154>:
     d48:	88 ec       	ldi	r24, 0xC8	; 200
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	9a 8f       	std	Y+26, r25	; 0x1a
     d4e:	89 8f       	std	Y+25, r24	; 0x19

00000d50 <.LBB140>:
     d50:	89 8d       	ldd	r24, Y+25	; 0x19
     d52:	9a 8d       	ldd	r25, Y+26	; 0x1a

00000d54 <.L1^B21>:
     d54:	01 97       	sbiw	r24, 0x01	; 1
     d56:	f1 f7       	brne	.-4      	; 0xd54 <.L1^B21>
     d58:	9a 8f       	std	Y+26, r25	; 0x1a
     d5a:	89 8f       	std	Y+25, r24	; 0x19

00000d5c <.Loc.260>:
	...

00000d5e <.LBE140>:
			__ticks --;
     d5e:	8f 89       	ldd	r24, Y+23	; 0x17
     d60:	98 8d       	ldd	r25, Y+24	; 0x18
     d62:	01 97       	sbiw	r24, 0x01	; 1
     d64:	98 8f       	std	Y+24, r25	; 0x18
     d66:	8f 8b       	std	Y+23, r24	; 0x17

00000d68 <.L153>:
		while(__ticks)
     d68:	8f 89       	ldd	r24, Y+23	; 0x17
     d6a:	98 8d       	ldd	r25, Y+24	; 0x18
     d6c:	00 97       	sbiw	r24, 0x00	; 0
     d6e:	61 f7       	brne	.-40     	; 0xd48 <.L154>

00000d70 <.Loc.263>:
		return;
     d70:	15 c0       	rjmp	.+42     	; 0xd9c <.L155>

00000d72 <.L173>:
		__ticks = (uint16_t)__tmp;
     d72:	6b 89       	ldd	r22, Y+19	; 0x13
     d74:	7c 89       	ldd	r23, Y+20	; 0x14
     d76:	8d 89       	ldd	r24, Y+21	; 0x15
     d78:	9e 89       	ldd	r25, Y+22	; 0x16
     d7a:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     d7e:	dc 01       	movw	r26, r24
     d80:	cb 01       	movw	r24, r22
     d82:	98 8f       	std	Y+24, r25	; 0x18
     d84:	8f 8b       	std	Y+23, r24	; 0x17

00000d86 <.L150>:
     d86:	8f 89       	ldd	r24, Y+23	; 0x17
     d88:	98 8d       	ldd	r25, Y+24	; 0x18
     d8a:	9c 8f       	std	Y+28, r25	; 0x1c
     d8c:	8b 8f       	std	Y+27, r24	; 0x1b

00000d8e <.LBB142>:
     d8e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     d90:	9c 8d       	ldd	r25, Y+28	; 0x1c

00000d92 <.L1^B22>:
     d92:	01 97       	sbiw	r24, 0x01	; 1
     d94:	f1 f7       	brne	.-4      	; 0xd92 <.L1^B22>
     d96:	9c 8f       	std	Y+28, r25	; 0x1c
     d98:	8b 8f       	std	Y+27, r24	; 0x1b

00000d9a <.Loc.266>:
	...

00000d9c <.L155>:

    _delay_ms(3000);

    a_disable();
     d9c:	0e 94 a3 05 	call	0xb46	; 0xb46 <a_disable>
     da0:	80 e0       	ldi	r24, 0x00	; 0
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	aa e7       	ldi	r26, 0x7A	; 122
     da6:	b4 e4       	ldi	r27, 0x44	; 68
     da8:	89 83       	std	Y+1, r24	; 0x01
     daa:	9a 83       	std	Y+2, r25	; 0x02
     dac:	ab 83       	std	Y+3, r26	; 0x03
     dae:	bc 83       	std	Y+4, r27	; 0x04

00000db0 <.LBB144>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     db0:	20 e0       	ldi	r18, 0x00	; 0
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	4a ef       	ldi	r20, 0xFA	; 250
     db6:	54 e4       	ldi	r21, 0x44	; 68
     db8:	69 81       	ldd	r22, Y+1	; 0x01
     dba:	7a 81       	ldd	r23, Y+2	; 0x02
     dbc:	8b 81       	ldd	r24, Y+3	; 0x03
     dbe:	9c 81       	ldd	r25, Y+4	; 0x04
     dc0:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     dc4:	dc 01       	movw	r26, r24
     dc6:	cb 01       	movw	r24, r22
     dc8:	8d 83       	std	Y+5, r24	; 0x05
     dca:	9e 83       	std	Y+6, r25	; 0x06
     dcc:	af 83       	std	Y+7, r26	; 0x07
     dce:	b8 87       	std	Y+8, r27	; 0x08

00000dd0 <.Loc.269>:
	if (__tmp < 1.0)
     dd0:	20 e0       	ldi	r18, 0x00	; 0
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	40 e8       	ldi	r20, 0x80	; 128
     dd6:	5f e3       	ldi	r21, 0x3F	; 63
     dd8:	6d 81       	ldd	r22, Y+5	; 0x05
     dda:	7e 81       	ldd	r23, Y+6	; 0x06
     ddc:	8f 81       	ldd	r24, Y+7	; 0x07
     dde:	98 85       	ldd	r25, Y+8	; 0x08
     de0:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__cmpsf2>
     de4:	81 15       	cp	r24, r1
     de6:	2c f4       	brge	.+10     	; 0xdf2 <.L174>

00000de8 <.Loc.270>:
		__ticks = 1;
     de8:	81 e0       	ldi	r24, 0x01	; 1
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	9a 87       	std	Y+10, r25	; 0x0a
     dee:	89 87       	std	Y+9, r24	; 0x09
     df0:	40 c0       	rjmp	.+128    	; 0xe72 <.L158>

00000df2 <.L174>:
	else if (__tmp > 65535)
     df2:	20 e0       	ldi	r18, 0x00	; 0
     df4:	3f ef       	ldi	r19, 0xFF	; 255
     df6:	4f e7       	ldi	r20, 0x7F	; 127
     df8:	57 e4       	ldi	r21, 0x47	; 71
     dfa:	6d 81       	ldd	r22, Y+5	; 0x05
     dfc:	7e 81       	ldd	r23, Y+6	; 0x06
     dfe:	8f 81       	ldd	r24, Y+7	; 0x07
     e00:	98 85       	ldd	r25, Y+8	; 0x08
     e02:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <__gesf2>
     e06:	81 30       	cpi	r24, 0x01	; 1
     e08:	54 f1       	brlt	.+84     	; 0xe5e <.L175>

00000e0a <.Loc.272>:
		__ticks = (uint16_t) (__ms * 10.0);
     e0a:	20 e0       	ldi	r18, 0x00	; 0
     e0c:	30 e0       	ldi	r19, 0x00	; 0
     e0e:	40 e2       	ldi	r20, 0x20	; 32
     e10:	51 e4       	ldi	r21, 0x41	; 65
     e12:	69 81       	ldd	r22, Y+1	; 0x01
     e14:	7a 81       	ldd	r23, Y+2	; 0x02
     e16:	8b 81       	ldd	r24, Y+3	; 0x03
     e18:	9c 81       	ldd	r25, Y+4	; 0x04
     e1a:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulsf3>
     e1e:	dc 01       	movw	r26, r24
     e20:	cb 01       	movw	r24, r22

00000e22 <.Loc.273>:
     e22:	bc 01       	movw	r22, r24
     e24:	cd 01       	movw	r24, r26
     e26:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     e2a:	dc 01       	movw	r26, r24
     e2c:	cb 01       	movw	r24, r22
     e2e:	9a 87       	std	Y+10, r25	; 0x0a
     e30:	89 87       	std	Y+9, r24	; 0x09

00000e32 <.Loc.274>:
		while(__ticks)
     e32:	10 c0       	rjmp	.+32     	; 0xe54 <.L161>

00000e34 <.L162>:
     e34:	88 ec       	ldi	r24, 0xC8	; 200
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	9c 87       	std	Y+12, r25	; 0x0c
     e3a:	8b 87       	std	Y+11, r24	; 0x0b

00000e3c <.LBB146>:
     e3c:	8b 85       	ldd	r24, Y+11	; 0x0b
     e3e:	9c 85       	ldd	r25, Y+12	; 0x0c

00000e40 <.L1^B23>:
     e40:	01 97       	sbiw	r24, 0x01	; 1
     e42:	f1 f7       	brne	.-4      	; 0xe40 <.L1^B23>
     e44:	9c 87       	std	Y+12, r25	; 0x0c
     e46:	8b 87       	std	Y+11, r24	; 0x0b

00000e48 <.Loc.276>:
	...

00000e4a <.LBE146>:
			__ticks --;
     e4a:	89 85       	ldd	r24, Y+9	; 0x09
     e4c:	9a 85       	ldd	r25, Y+10	; 0x0a
     e4e:	01 97       	sbiw	r24, 0x01	; 1
     e50:	9a 87       	std	Y+10, r25	; 0x0a
     e52:	89 87       	std	Y+9, r24	; 0x09

00000e54 <.L161>:
		while(__ticks)
     e54:	89 85       	ldd	r24, Y+9	; 0x09
     e56:	9a 85       	ldd	r25, Y+10	; 0x0a
     e58:	00 97       	sbiw	r24, 0x00	; 0
     e5a:	61 f7       	brne	.-40     	; 0xe34 <.L162>

00000e5c <.Loc.279>:
		return;
     e5c:	15 c0       	rjmp	.+42     	; 0xe88 <.L163>

00000e5e <.L175>:
		__ticks = (uint16_t)__tmp;
     e5e:	6d 81       	ldd	r22, Y+5	; 0x05
     e60:	7e 81       	ldd	r23, Y+6	; 0x06
     e62:	8f 81       	ldd	r24, Y+7	; 0x07
     e64:	98 85       	ldd	r25, Y+8	; 0x08
     e66:	0e 94 df 07 	call	0xfbe	; 0xfbe <__fixunssfsi>
     e6a:	dc 01       	movw	r26, r24
     e6c:	cb 01       	movw	r24, r22
     e6e:	9a 87       	std	Y+10, r25	; 0x0a
     e70:	89 87       	std	Y+9, r24	; 0x09

00000e72 <.L158>:
     e72:	89 85       	ldd	r24, Y+9	; 0x09
     e74:	9a 85       	ldd	r25, Y+10	; 0x0a
     e76:	9e 87       	std	Y+14, r25	; 0x0e
     e78:	8d 87       	std	Y+13, r24	; 0x0d

00000e7a <.LBB148>:
     e7a:	8d 85       	ldd	r24, Y+13	; 0x0d
     e7c:	9e 85       	ldd	r25, Y+14	; 0x0e

00000e7e <.L1^B24>:
     e7e:	01 97       	sbiw	r24, 0x01	; 1
     e80:	f1 f7       	brne	.-4      	; 0xe7e <.L1^B24>
     e82:	9e 87       	std	Y+14, r25	; 0x0e
     e84:	8d 87       	std	Y+13, r24	; 0x0d

00000e86 <.Loc.282>:
	...

00000e88 <.L163>:

    _delay_ms(1000); // optional
}
     e88:	00 00       	nop
     e8a:	aa 96       	adiw	r28, 0x2a	; 42
     e8c:	0f b6       	in	r0, 0x3f	; 63
     e8e:	f8 94       	cli
     e90:	de bf       	out	0x3e, r29	; 62
     e92:	0f be       	out	0x3f, r0	; 63
     e94:	cd bf       	out	0x3d, r28	; 61
     e96:	df 91       	pop	r29
     e98:	cf 91       	pop	r28
     e9a:	08 95       	ret

00000e9c <manual>:

// Manual mode routine.
void manual() {
     e9c:	cf 93       	push	r28
     e9e:	df 93       	push	r29
     ea0:	cd b7       	in	r28, 0x3d	; 61
     ea2:	de b7       	in	r29, 0x3e	; 62

00000ea4 <.Loc.285>:
    if (button_shoot()) {
     ea4:	0e 94 cb 04 	call	0x996	; 0x996 <button_shoot>

00000ea8 <.Loc.286>:
     ea8:	81 15       	cp	r24, r1
     eaa:	11 f0       	breq	.+4      	; 0xeb0 <.L178>

00000eac <.Loc.287>:
        shoot();
     eac:	0e 94 d6 05 	call	0xbac	; 0xbac <shoot>

00000eb0 <.L178>:
    }
}
     eb0:	00 00       	nop
     eb2:	df 91       	pop	r29
     eb4:	cf 91       	pop	r28
     eb6:	08 95       	ret

00000eb8 <terminate>:

// Main work mode.
void terminate() {
     eb8:	cf 93       	push	r28
     eba:	df 93       	push	r29
     ebc:	cd b7       	in	r28, 0x3d	; 61
     ebe:	de b7       	in	r29, 0x3e	; 62

00000ec0 <.L181>:
    while (1) {
        mode_update();
     ec0:	0e 94 df 04 	call	0x9be	; 0x9be <mode_update>

00000ec4 <.Loc.291>:
        if (!mode) {
     ec4:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <mode>
     ec8:	81 e0       	ldi	r24, 0x01	; 1
     eca:	89 27       	eor	r24, r25

00000ecc <.Loc.292>:
     ecc:	81 15       	cp	r24, r1
     ece:	c1 f3       	breq	.-16     	; 0xec0 <.L181>

00000ed0 <.Loc.293>:
            manual();
     ed0:	0e 94 4e 07 	call	0xe9c	; 0xe9c <manual>

00000ed4 <.Loc.294>:
        mode_update();
     ed4:	f5 cf       	rjmp	.-22     	; 0xec0 <.L181>

00000ed6 <clear_all_ports>:
        }
    }
}

// Clear all ports
void clear_all_ports() {
     ed6:	cf 93       	push	r28
     ed8:	df 93       	push	r29
     eda:	cd b7       	in	r28, 0x3d	; 61
     edc:	de b7       	in	r29, 0x3e	; 62

00000ede <.Loc.296>:
    DDRB &= 0b11111000;
     ede:	84 e2       	ldi	r24, 0x24	; 36
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	fc 01       	movw	r30, r24
     ee4:	20 81       	ld	r18, Z

00000ee6 <.Loc.297>:
     ee6:	84 e2       	ldi	r24, 0x24	; 36
     ee8:	90 e0       	ldi	r25, 0x00	; 0

00000eea <.Loc.298>:
     eea:	28 7f       	andi	r18, 0xF8	; 248
     eec:	fc 01       	movw	r30, r24
     eee:	20 83       	st	Z, r18

00000ef0 <.Loc.299>:
    DDRB |= 0b00000111; // Port B pin modes: B3-B7 = programmer, B0-B2 = output (diode and engine enable)
     ef0:	84 e2       	ldi	r24, 0x24	; 36
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	fc 01       	movw	r30, r24
     ef6:	20 81       	ld	r18, Z
     ef8:	84 e2       	ldi	r24, 0x24	; 36
     efa:	90 e0       	ldi	r25, 0x00	; 0

00000efc <.Loc.300>:
     efc:	27 60       	ori	r18, 0x07	; 7
     efe:	fc 01       	movw	r30, r24
     f00:	20 83       	st	Z, r18

00000f02 <.Loc.301>:
    // DDRB = 0bXX010111;
    DDRC = 0b00000000;
     f02:	87 e2       	ldi	r24, 0x27	; 39
     f04:	90 e0       	ldi	r25, 0x00	; 0

00000f06 <.Loc.302>:
     f06:	fc 01       	movw	r30, r24
     f08:	10 82       	st	Z, r1

00000f0a <.Loc.303>:
    DDRD = 0b01011111;
     f0a:	8a e2       	ldi	r24, 0x2A	; 42
     f0c:	90 e0       	ldi	r25, 0x00	; 0

00000f0e <.Loc.304>:
     f0e:	2f e5       	ldi	r18, 0x5F	; 95
     f10:	fc 01       	movw	r30, r24
     f12:	20 83       	st	Z, r18

00000f14 <.Loc.305>:

    // można sprawdzić co się stanie jak nie wyzerujemy (i jak działa reset)
    PORTB &= 0b11111000;
     f14:	85 e2       	ldi	r24, 0x25	; 37
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	fc 01       	movw	r30, r24
     f1a:	20 81       	ld	r18, Z

00000f1c <.Loc.306>:
     f1c:	85 e2       	ldi	r24, 0x25	; 37
     f1e:	90 e0       	ldi	r25, 0x00	; 0

00000f20 <.Loc.307>:
     f20:	28 7f       	andi	r18, 0xF8	; 248
     f22:	fc 01       	movw	r30, r24
     f24:	20 83       	st	Z, r18

00000f26 <.Loc.308>:
    PORTD = 0b01010000; // ones on button-outputs
     f26:	8b e2       	ldi	r24, 0x2B	; 43
     f28:	90 e0       	ldi	r25, 0x00	; 0

00000f2a <.Loc.309>:
     f2a:	20 e5       	ldi	r18, 0x50	; 80
     f2c:	fc 01       	movw	r30, r24
     f2e:	20 83       	st	Z, r18

00000f30 <.Loc.310>:
}
     f30:	00 00       	nop
     f32:	df 91       	pop	r29
     f34:	cf 91       	pop	r28
     f36:	08 95       	ret

00000f38 <init>:

// Initializing ports
void init() {
     f38:	cf 93       	push	r28
     f3a:	df 93       	push	r29
     f3c:	cd b7       	in	r28, 0x3d	; 61
     f3e:	de b7       	in	r29, 0x3e	; 62

00000f40 <.Loc.312>:
    // Port B pin modes: B3-B7 = programmer, B0-B2 = output (diode and engine enable)
    DDRB &= 0b11111000;
     f40:	84 e2       	ldi	r24, 0x24	; 36
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	fc 01       	movw	r30, r24
     f46:	20 81       	ld	r18, Z

00000f48 <.Loc.313>:
     f48:	84 e2       	ldi	r24, 0x24	; 36
     f4a:	90 e0       	ldi	r25, 0x00	; 0

00000f4c <.Loc.314>:
     f4c:	28 7f       	andi	r18, 0xF8	; 248
     f4e:	fc 01       	movw	r30, r24
     f50:	20 83       	st	Z, r18

00000f52 <.Loc.315>:
    DDRB |= 0b00000111;
     f52:	84 e2       	ldi	r24, 0x24	; 36
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	fc 01       	movw	r30, r24
     f58:	20 81       	ld	r18, Z
     f5a:	84 e2       	ldi	r24, 0x24	; 36
     f5c:	90 e0       	ldi	r25, 0x00	; 0

00000f5e <.Loc.316>:
     f5e:	27 60       	ori	r18, 0x07	; 7
     f60:	fc 01       	movw	r30, r24
     f62:	20 83       	st	Z, r18

00000f64 <.Loc.317>:
    // DDRB |= 0b00010111;

    // DDRB = 0bXX010111;

    // Port C pin modes: only inputs from sensors
    DDRC = 0b00000000;
     f64:	87 e2       	ldi	r24, 0x27	; 39
     f66:	90 e0       	ldi	r25, 0x00	; 0

00000f68 <.Loc.318>:
     f68:	fc 01       	movw	r30, r24
     f6a:	10 82       	st	Z, r1

00000f6c <.Loc.319>:

    // Port D pin modes: D0-D3 = engine direction control, D4-D7 = buttons O/I/O/I
    DDRD = 0b01011111;
     f6c:	8a e2       	ldi	r24, 0x2A	; 42
     f6e:	90 e0       	ldi	r25, 0x00	; 0

00000f70 <.Loc.320>:
     f70:	2f e5       	ldi	r18, 0x5F	; 95
     f72:	fc 01       	movw	r30, r24
     f74:	20 83       	st	Z, r18

00000f76 <.Loc.321>:

    // Port B output: Clearing pins B0-B2, the rest belongs to programmer (not touching it)
    PORTB &= 0b11111000;
     f76:	85 e2       	ldi	r24, 0x25	; 37
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	fc 01       	movw	r30, r24
     f7c:	20 81       	ld	r18, Z

00000f7e <.Loc.322>:
     f7e:	85 e2       	ldi	r24, 0x25	; 37
     f80:	90 e0       	ldi	r25, 0x00	; 0

00000f82 <.Loc.323>:
     f82:	28 7f       	andi	r18, 0xF8	; 248
     f84:	fc 01       	movw	r30, r24
     f86:	20 83       	st	Z, r18

00000f88 <.Loc.324>:

    // Port D output: D0 and D2 = 1 (setting spin direction); D4 and D6 = 1 (button-output)
    PORTD = 0b01010101;
     f88:	8b e2       	ldi	r24, 0x2B	; 43
     f8a:	90 e0       	ldi	r25, 0x00	; 0

00000f8c <.Loc.325>:
     f8c:	25 e5       	ldi	r18, 0x55	; 85
     f8e:	fc 01       	movw	r30, r24
     f90:	20 83       	st	Z, r18

00000f92 <.Loc.326>:
}
     f92:	00 00       	nop
     f94:	df 91       	pop	r29
     f96:	cf 91       	pop	r28
     f98:	08 95       	ret

00000f9a <main>:

int main(void)
{
     f9a:	cf 93       	push	r28
     f9c:	df 93       	push	r29
     f9e:	cd b7       	in	r28, 0x3d	; 61
     fa0:	de b7       	in	r29, 0x3e	; 62

00000fa2 <.Loc.328>:
    clear_all_ports();
     fa2:	0e 94 6b 07 	call	0xed6	; 0xed6 <clear_all_ports>

00000fa6 <.Loc.329>:

    sprawdzaj_diody();
     fa6:	0e 94 48 00 	call	0x90	; 0x90 <sprawdzaj_diody>
     faa:	80 e0       	ldi	r24, 0x00	; 0
     fac:	90 e0       	ldi	r25, 0x00	; 0

00000fae <.Loc.330>:
    //sprawdzaj_przyciski();
    //wlacz_silniki_na_chwile();
    //steruj_jednym_silnikiem_przyciskami();
}
     fae:	df 91       	pop	r29
     fb0:	cf 91       	pop	r28
     fb2:	08 95       	ret

00000fb4 <__cmpsf2>:
     fb4:	0e 94 0e 08 	call	0x101c	; 0x101c <__fp_cmp>
     fb8:	08 f4       	brcc	.+2      	; 0xfbc <.L1^B1>
     fba:	81 e0       	ldi	r24, 0x01	; 1

00000fbc <.L1^B1>:
     fbc:	08 95       	ret

00000fbe <__fixunssfsi>:
     fbe:	0e 94 3a 08 	call	0x1074	; 0x1074 <__fp_splitA>
     fc2:	88 f0       	brcs	.+34     	; 0xfe6 <.L_err>
     fc4:	9f 57       	subi	r25, 0x7F	; 127
     fc6:	98 f0       	brcs	.+38     	; 0xfee <.L_zr>
     fc8:	b9 2f       	mov	r27, r25
     fca:	99 27       	eor	r25, r25
     fcc:	b7 51       	subi	r27, 0x17	; 23
     fce:	b0 f0       	brcs	.+44     	; 0xffc <.L4^B1>
     fd0:	e1 f0       	breq	.+56     	; 0x100a <.L_sign>

00000fd2 <.L1^B1>:
     fd2:	66 0f       	add	r22, r22
     fd4:	77 1f       	adc	r23, r23
     fd6:	88 1f       	adc	r24, r24
     fd8:	99 1f       	adc	r25, r25
     fda:	1a f0       	brmi	.+6      	; 0xfe2 <.L2^B1>
     fdc:	ba 95       	dec	r27
     fde:	c9 f7       	brne	.-14     	; 0xfd2 <.L1^B1>
     fe0:	14 c0       	rjmp	.+40     	; 0x100a <.L_sign>

00000fe2 <.L2^B1>:
     fe2:	b1 30       	cpi	r27, 0x01	; 1
     fe4:	91 f0       	breq	.+36     	; 0x100a <.L_sign>

00000fe6 <.L_err>:
     fe6:	0e 94 54 08 	call	0x10a8	; 0x10a8 <__fp_zero>
     fea:	b1 e0       	ldi	r27, 0x01	; 1
     fec:	08 95       	ret

00000fee <.L_zr>:
     fee:	0c 94 54 08 	jmp	0x10a8	; 0x10a8 <__fp_zero>

00000ff2 <.L3^B1>:
     ff2:	67 2f       	mov	r22, r23
     ff4:	78 2f       	mov	r23, r24
     ff6:	88 27       	eor	r24, r24
     ff8:	b8 5f       	subi	r27, 0xF8	; 248
     ffa:	39 f0       	breq	.+14     	; 0x100a <.L_sign>

00000ffc <.L4^B1>:
     ffc:	b9 3f       	cpi	r27, 0xF9	; 249
     ffe:	cc f3       	brlt	.-14     	; 0xff2 <.L3^B1>

00001000 <.L5^B1>:
    1000:	86 95       	lsr	r24
    1002:	77 95       	ror	r23
    1004:	67 95       	ror	r22
    1006:	b3 95       	inc	r27
    1008:	d9 f7       	brne	.-10     	; 0x1000 <.L5^B1>

0000100a <.L_sign>:
    100a:	3e f4       	brtc	.+14     	; 0x101a <.L6^B1>
    100c:	90 95       	com	r25
    100e:	80 95       	com	r24
    1010:	70 95       	com	r23
    1012:	61 95       	neg	r22
    1014:	7f 4f       	sbci	r23, 0xFF	; 255
    1016:	8f 4f       	sbci	r24, 0xFF	; 255
    1018:	9f 4f       	sbci	r25, 0xFF	; 255

0000101a <.L6^B1>:
    101a:	08 95       	ret

0000101c <__fp_cmp>:
    101c:	99 0f       	add	r25, r25
    101e:	00 08       	sbc	r0, r0
    1020:	55 0f       	add	r21, r21
    1022:	aa 0b       	sbc	r26, r26
    1024:	e0 e8       	ldi	r30, 0x80	; 128
    1026:	fe ef       	ldi	r31, 0xFE	; 254
    1028:	16 16       	cp	r1, r22
    102a:	17 06       	cpc	r1, r23
    102c:	e8 07       	cpc	r30, r24
    102e:	f9 07       	cpc	r31, r25
    1030:	c0 f0       	brcs	.+48     	; 0x1062 <.L9^B1>
    1032:	12 16       	cp	r1, r18
    1034:	13 06       	cpc	r1, r19
    1036:	e4 07       	cpc	r30, r20
    1038:	f5 07       	cpc	r31, r21
    103a:	98 f0       	brcs	.+38     	; 0x1062 <.L9^B1>
    103c:	62 1b       	sub	r22, r18
    103e:	73 0b       	sbc	r23, r19
    1040:	84 0b       	sbc	r24, r20
    1042:	95 0b       	sbc	r25, r21
    1044:	39 f4       	brne	.+14     	; 0x1054 <.L1^B1>
    1046:	0a 26       	eor	r0, r26
    1048:	61 f0       	breq	.+24     	; 0x1062 <.L9^B1>
    104a:	23 2b       	or	r18, r19
    104c:	24 2b       	or	r18, r20
    104e:	25 2b       	or	r18, r21
    1050:	21 f4       	brne	.+8      	; 0x105a <.L2^B1>
    1052:	08 95       	ret

00001054 <.L1^B1>:
    1054:	0a 26       	eor	r0, r26
    1056:	09 f4       	brne	.+2      	; 0x105a <.L2^B1>
    1058:	a1 40       	sbci	r26, 0x01	; 1

0000105a <.L2^B1>:
    105a:	a6 95       	lsr	r26
    105c:	8f ef       	ldi	r24, 0xFF	; 255
    105e:	81 1d       	adc	r24, r1
    1060:	81 1d       	adc	r24, r1

00001062 <.L9^B1>:
    1062:	08 95       	ret

00001064 <__fp_split3>:
    1064:	57 fd       	sbrc	r21, 7
    1066:	90 58       	subi	r25, 0x80	; 128
    1068:	44 0f       	add	r20, r20
    106a:	55 1f       	adc	r21, r21
    106c:	59 f0       	breq	.+22     	; 0x1084 <.L4^B1>
    106e:	5f 3f       	cpi	r21, 0xFF	; 255
    1070:	71 f0       	breq	.+28     	; 0x108e <.L5^B1>

00001072 <.L1^B1>:
    1072:	47 95       	ror	r20

00001074 <__fp_splitA>:
    1074:	88 0f       	add	r24, r24
    1076:	97 fb       	bst	r25, 7
    1078:	99 1f       	adc	r25, r25
    107a:	61 f0       	breq	.+24     	; 0x1094 <.L6^B1>
    107c:	9f 3f       	cpi	r25, 0xFF	; 255
    107e:	79 f0       	breq	.+30     	; 0x109e <.L7^B1>

00001080 <.L3^B1>:
    1080:	87 95       	ror	r24
    1082:	08 95       	ret

00001084 <.L4^B1>:
    1084:	12 16       	cp	r1, r18
    1086:	13 06       	cpc	r1, r19
    1088:	14 06       	cpc	r1, r20
    108a:	55 1f       	adc	r21, r21
    108c:	f2 cf       	rjmp	.-28     	; 0x1072 <.L1^B1>

0000108e <.L5^B1>:
    108e:	46 95       	lsr	r20
    1090:	f1 df       	rcall	.-30     	; 0x1074 <__fp_splitA>
    1092:	08 c0       	rjmp	.+16     	; 0x10a4 <.L8^B1>

00001094 <.L6^B1>:
    1094:	16 16       	cp	r1, r22
    1096:	17 06       	cpc	r1, r23
    1098:	18 06       	cpc	r1, r24
    109a:	99 1f       	adc	r25, r25
    109c:	f1 cf       	rjmp	.-30     	; 0x1080 <.L3^B1>

0000109e <.L7^B1>:
    109e:	86 95       	lsr	r24
    10a0:	71 05       	cpc	r23, r1
    10a2:	61 05       	cpc	r22, r1

000010a4 <.L8^B1>:
    10a4:	08 94       	sec
    10a6:	08 95       	ret

000010a8 <__fp_zero>:
    10a8:	e8 94       	clt

000010aa <__fp_szero>:
    10aa:	bb 27       	eor	r27, r27
    10ac:	66 27       	eor	r22, r22
    10ae:	77 27       	eor	r23, r23
    10b0:	cb 01       	movw	r24, r22
    10b2:	97 f9       	bld	r25, 7
    10b4:	08 95       	ret

000010b6 <__gesf2>:
    10b6:	0e 94 0e 08 	call	0x101c	; 0x101c <__fp_cmp>
    10ba:	08 f4       	brcc	.+2      	; 0x10be <.L1^B1>
    10bc:	8f ef       	ldi	r24, 0xFF	; 255

000010be <.L1^B1>:
    10be:	08 95       	ret

000010c0 <__mulsf3>:
    10c0:	0e 94 73 08 	call	0x10e6	; 0x10e6 <__mulsf3x>
    10c4:	0c 94 e4 08 	jmp	0x11c8	; 0x11c8 <__fp_round>

000010c8 <.L0^B1>:
    10c8:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__fp_pscA>
    10cc:	38 f0       	brcs	.+14     	; 0x10dc <.L1^B1>
    10ce:	0e 94 dd 08 	call	0x11ba	; 0x11ba <__fp_pscB>
    10d2:	20 f0       	brcs	.+8      	; 0x10dc <.L1^B1>
    10d4:	95 23       	and	r25, r21
    10d6:	11 f0       	breq	.+4      	; 0x10dc <.L1^B1>
    10d8:	0c 94 cd 08 	jmp	0x119a	; 0x119a <__fp_inf>

000010dc <.L1^B1>:
    10dc:	0c 94 d3 08 	jmp	0x11a6	; 0x11a6 <__fp_nan>

000010e0 <.L2^B1>:
    10e0:	11 24       	eor	r1, r1
    10e2:	0c 94 55 08 	jmp	0x10aa	; 0x10aa <__fp_szero>

000010e6 <__mulsf3x>:
    10e6:	0e 94 32 08 	call	0x1064	; 0x1064 <__fp_split3>
    10ea:	70 f3       	brcs	.-36     	; 0x10c8 <.L0^B1>

000010ec <__mulsf3_pse>:
    10ec:	95 9f       	mul	r25, r21
    10ee:	c1 f3       	breq	.-16     	; 0x10e0 <.L2^B1>
    10f0:	95 0f       	add	r25, r21
    10f2:	50 e0       	ldi	r21, 0x00	; 0
    10f4:	55 1f       	adc	r21, r21
    10f6:	62 9f       	mul	r22, r18
    10f8:	f0 01       	movw	r30, r0
    10fa:	72 9f       	mul	r23, r18
    10fc:	bb 27       	eor	r27, r27
    10fe:	f0 0d       	add	r31, r0
    1100:	b1 1d       	adc	r27, r1
    1102:	63 9f       	mul	r22, r19
    1104:	aa 27       	eor	r26, r26
    1106:	f0 0d       	add	r31, r0
    1108:	b1 1d       	adc	r27, r1
    110a:	aa 1f       	adc	r26, r26
    110c:	64 9f       	mul	r22, r20
    110e:	66 27       	eor	r22, r22
    1110:	b0 0d       	add	r27, r0
    1112:	a1 1d       	adc	r26, r1
    1114:	66 1f       	adc	r22, r22
    1116:	82 9f       	mul	r24, r18
    1118:	22 27       	eor	r18, r18
    111a:	b0 0d       	add	r27, r0
    111c:	a1 1d       	adc	r26, r1
    111e:	62 1f       	adc	r22, r18
    1120:	73 9f       	mul	r23, r19
    1122:	b0 0d       	add	r27, r0
    1124:	a1 1d       	adc	r26, r1
    1126:	62 1f       	adc	r22, r18
    1128:	83 9f       	mul	r24, r19
    112a:	a0 0d       	add	r26, r0
    112c:	61 1d       	adc	r22, r1
    112e:	22 1f       	adc	r18, r18
    1130:	74 9f       	mul	r23, r20
    1132:	33 27       	eor	r19, r19
    1134:	a0 0d       	add	r26, r0
    1136:	61 1d       	adc	r22, r1
    1138:	23 1f       	adc	r18, r19
    113a:	84 9f       	mul	r24, r20
    113c:	60 0d       	add	r22, r0
    113e:	21 1d       	adc	r18, r1
    1140:	82 2f       	mov	r24, r18
    1142:	76 2f       	mov	r23, r22
    1144:	6a 2f       	mov	r22, r26
    1146:	11 24       	eor	r1, r1
    1148:	9f 57       	subi	r25, 0x7F	; 127
    114a:	50 40       	sbci	r21, 0x00	; 0
    114c:	9a f0       	brmi	.+38     	; 0x1174 <.L13^B1>
    114e:	f1 f0       	breq	.+60     	; 0x118c <.L15^B1>

00001150 <.L10^B1>:
    1150:	88 23       	and	r24, r24
    1152:	4a f0       	brmi	.+18     	; 0x1166 <.L11^B1>
    1154:	ee 0f       	add	r30, r30
    1156:	ff 1f       	adc	r31, r31
    1158:	bb 1f       	adc	r27, r27
    115a:	66 1f       	adc	r22, r22
    115c:	77 1f       	adc	r23, r23
    115e:	88 1f       	adc	r24, r24
    1160:	91 50       	subi	r25, 0x01	; 1
    1162:	50 40       	sbci	r21, 0x00	; 0
    1164:	a9 f7       	brne	.-22     	; 0x1150 <.L10^B1>

00001166 <.L11^B1>:
    1166:	9e 3f       	cpi	r25, 0xFE	; 254
    1168:	51 05       	cpc	r21, r1
    116a:	80 f0       	brcs	.+32     	; 0x118c <.L15^B1>
    116c:	0c 94 cd 08 	jmp	0x119a	; 0x119a <__fp_inf>

00001170 <.L12^B1>:
    1170:	0c 94 55 08 	jmp	0x10aa	; 0x10aa <__fp_szero>

00001174 <.L13^B1>:
    1174:	5f 3f       	cpi	r21, 0xFF	; 255
    1176:	e4 f3       	brlt	.-8      	; 0x1170 <.L12^B1>
    1178:	98 3e       	cpi	r25, 0xE8	; 232
    117a:	d4 f3       	brlt	.-12     	; 0x1170 <.L12^B1>

0000117c <.L14^B1>:
    117c:	86 95       	lsr	r24
    117e:	77 95       	ror	r23
    1180:	67 95       	ror	r22
    1182:	b7 95       	ror	r27
    1184:	f7 95       	ror	r31
    1186:	e7 95       	ror	r30
    1188:	9f 5f       	subi	r25, 0xFF	; 255
    118a:	c1 f7       	brne	.-16     	; 0x117c <.L14^B1>

0000118c <.L15^B1>:
    118c:	fe 2b       	or	r31, r30
    118e:	88 0f       	add	r24, r24
    1190:	91 1d       	adc	r25, r1
    1192:	96 95       	lsr	r25
    1194:	87 95       	ror	r24
    1196:	97 f9       	bld	r25, 7
    1198:	08 95       	ret

0000119a <__fp_inf>:
    119a:	97 f9       	bld	r25, 7
    119c:	9f 67       	ori	r25, 0x7F	; 127
    119e:	80 e8       	ldi	r24, 0x80	; 128
    11a0:	70 e0       	ldi	r23, 0x00	; 0
    11a2:	60 e0       	ldi	r22, 0x00	; 0
    11a4:	08 95       	ret

000011a6 <__fp_nan>:
    11a6:	9f ef       	ldi	r25, 0xFF	; 255
    11a8:	80 ec       	ldi	r24, 0xC0	; 192
    11aa:	08 95       	ret

000011ac <__fp_pscA>:
    11ac:	00 24       	eor	r0, r0
    11ae:	0a 94       	dec	r0
    11b0:	16 16       	cp	r1, r22
    11b2:	17 06       	cpc	r1, r23
    11b4:	18 06       	cpc	r1, r24
    11b6:	09 06       	cpc	r0, r25
    11b8:	08 95       	ret

000011ba <__fp_pscB>:
    11ba:	00 24       	eor	r0, r0
    11bc:	0a 94       	dec	r0
    11be:	12 16       	cp	r1, r18
    11c0:	13 06       	cpc	r1, r19
    11c2:	14 06       	cpc	r1, r20
    11c4:	05 06       	cpc	r0, r21
    11c6:	08 95       	ret

000011c8 <__fp_round>:
    11c8:	09 2e       	mov	r0, r25
    11ca:	03 94       	inc	r0
    11cc:	00 0c       	add	r0, r0
    11ce:	11 f4       	brne	.+4      	; 0x11d4 <.L1^B1>
    11d0:	88 23       	and	r24, r24
    11d2:	52 f0       	brmi	.+20     	; 0x11e8 <.L3^B1>

000011d4 <.L1^B1>:
    11d4:	bb 0f       	add	r27, r27
    11d6:	40 f4       	brcc	.+16     	; 0x11e8 <.L3^B1>
    11d8:	bf 2b       	or	r27, r31
    11da:	11 f4       	brne	.+4      	; 0x11e0 <.L2^B1>
    11dc:	60 ff       	sbrs	r22, 0
    11de:	04 c0       	rjmp	.+8      	; 0x11e8 <.L3^B1>

000011e0 <.L2^B1>:
    11e0:	6f 5f       	subi	r22, 0xFF	; 255
    11e2:	7f 4f       	sbci	r23, 0xFF	; 255
    11e4:	8f 4f       	sbci	r24, 0xFF	; 255
    11e6:	9f 4f       	sbci	r25, 0xFF	; 255

000011e8 <.L3^B1>:
    11e8:	08 95       	ret

000011ea <_exit>:
    11ea:	f8 94       	cli

000011ec <__stop_program>:
    11ec:	ff cf       	rjmp	.-2      	; 0x11ec <__stop_program>
